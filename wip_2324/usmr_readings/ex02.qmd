---
title: "Week 2 exercises"
reference-location: margin
citation-location: margin
---

```{r setup, include=FALSE}
source('assets/setup.R')
library(xaringanExtra)
xaringanExtra::use_panelset()
```


:::frame
In the last couple of years during welcome week, we have asked students of the statistics courses in the Psychology department to fill out a little survey. Anonymised data are available at https://uoepsy.github.io/data/surveydata_allcourse.csv. 
:::

# Data manipulation & visualisation


:::qq
Create a new variable in the dataset which indicates whether people are taller than 6 foot (182cm).
:::
:::column-margin
You might use `mutate()`. Remember to make the changes apply to the objects in your environment, rather than just printing it out.  
`data <- data %>% mutate(...)`
:::
:::bs50
:::
  
:::qq
What percentage of respondents to the survey are greater than 6 foot tall?
:::
:::column-margin
Try `table()`, and then think about how we can convert the counts to percentages (what does `sum()` of the table give you?).  
See also Chapter 3's [discussion of categorical data](03_measurement.html#categorical){target="_blank"}.
:::
:::bs75
:::

:::qq
how many of USMR students in `r paste0(as.numeric(substr(Sys.Date(),1,4)),"/",as.numeric(substr(Sys.Date(),3,4))+1)` are born in the same month as you? 
:::
:::column-margin
This will involve `filter`ing your data to current USMR students first.  
In tidyverse you can make a table using: `... %>%` `select(variable1, variable2) %>%` `table()`  
You can also try: 
`... %>%`
`count(variable1, variable2)`
:::
:::bs75
:::

:::qq
Calculate the mean and standard deviation of heights of all respondents to the survey.  
Can you (also) do this using the tidyverse syntax?
:::
:::column-margin
We can do it with `mean(data$height)`, but it will be useful to practice tidyverse style. You'll want to `summarise()` the data.  
We're likely to have missing data in here, so `na.rm=TRUE` will be handy (see [Chapter 3: numeric](03_measurement.html#numeric){target="_blank"})
:::
:::bs50
:::

:::qq
Plot the distribution of heights of all respondents. 
Try to make it 'publication ready'.  
:::
:::column-margin
No `hist()` here, we're going to want [ggplot!](03_measurement.html#ggplot){target="_blank"}.  
:::

:::qq
For respondents _from each of the different courses_, calculate the mean and standard deviation of heights.  
:::
:::column-margin
This is just like an earlier question - we want to `summarise` our data. Only this time we need to `group_by` something else first.   
:::

:::qq
Plot the distributions of heights for each course.  
Based on your answer to the previous question, can you picture what the distributions are going to look like _before_ you plot them?  
:::
:::column-margin
You'll probably want to add an extra `aesthetic` mapping from the `course` variable to some feature of your plot (e.g. colour).  
Or try looking up the documentation for `?facet_wrap`. 
:::

:::qq
What proportion of respondents to the survey are taller than you?  
:::
:::column-margin
Remember that we can `sum()` a condition as a quick way of counting.   
`sum(data$variable == "thing")` adds up all the TRUE responses.  
We can actually use this logic inside tidyverse functions like `summarise` and `count` too.  

:::
:::bs100
:::

# Estimates & Intervals

:::qq
Suppose we are interested in the average life-satisfaction rating of MSc students at Edinburgh University.  

We only asked this question to students in USMR in `r paste0(as.numeric(substr(Sys.Date(),1,4)),"/",as.numeric(substr(Sys.Date(),3,4))+1)`, so to make things easier, let's create a subset of the dataset which includes only those students. 
:::
:::column-margin
This will be some `filter`ing, and assigning (`usmrdata <-`) to a new name.
:::

:::qq
For the USMR students in `r paste0(as.numeric(substr(Sys.Date(),1,4)),"/",as.numeric(substr(Sys.Date(),3,4))+1)`, calculate the following: 

- mean life satisfaction rating
- standard deviation of life satisfaction ratings
- number of respondents who completed life satisfaction rating

:::
:::column-margin
You can do this with things like `mean(data$variable)`, or you can do it all in tidyverse (see the [example of `summarise` in Chapter 3](03_measurement.html#tidyverse-and-pipes){target="_blank"}). If you do this all inside `summarise()` then you might find the function `n()` useful.
:::

:::qq
Using your answers to the previous question, construct a 95% confidence interval for the mean life satisfaction rating.  

Why might it be a _bad_ idea to use this as an estimate of the average life-satisfaction rating of all MSc students at Edinburgh University?  
:::
:::column-margin
The previous question gives you all the pieces that you need. You'll just need to put them together in the way seen in [Chapter 4's section on CIs](04_sampling.html#confidence-intervals){target="_blank"}.  

Think about who makes up the sample (e.g. USMR students). Are they _representative_ of the population we are trying to generalise to?  
:::

