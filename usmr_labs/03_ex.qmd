---
title: "Exercises: T-tests"
link-citations: true
params: 
    SHOW_SOLS: TRUE
    TOGGLE: TRUE
---


```{r}
#| label: setup
#| include: false
source('assets/setup.R')
library(tidyverse)
library(patchwork)
library(xaringanExtra)
xaringanExtra::use_panelset()
set.seed(017)
```

# Intervals again  

`r qbegin(1)`
At the end of last week's exercises, we estimated the mean sleep-quality rating, and computed a confidence interval, using the formula below.  

$$
\begin{align}
\text{95\% CI: }& \bar x \pm 1.96 \times SE \\
\end{align}
$$

Can you use R to show where the 1.96 comes from?  

::: {.callout-tip collapse="true"}
#### Hints

`qnorm`!  (see the end of [03A #uncertainty-due-to-sampling](03a_inference.html#uncertainty-due-to-sampling){target="_blank"})

:::

`r qend()`
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`
The 1.96 comes from 95% of the normal distribution falling within 1.96 standard deviations of the mean:  

```{r}
qnorm(c(0.025, 0.975))
```
`r solend()`

`r qbegin(2)`
As we learned in [3B #t-distributions](03b_inference2.html#t-distributions){target="_blank"}, the sampling distribution of a statistic has heavier tails the smaller the size of the sample it is derived from. In practice, we are better using $t$-distributions to construct confidence intervals and perform statistical tests.  

The code below creates a dataframe that contains the number of books read by 7 people in `r as.numeric(substr(Sys.Date(),1,4))-1`.    
(Note `tibble` is just a tidyverse version of `data.frame`):  
```{r}
bookdata <- 
  tibble(
    person = c("Martin","Umberto","Monica","Emma","Josiah","Dan","Aja"),
    books_read = c(12,19,9,11,8,28,13)
  )
```

Calculate the mean number of books read in `r as.numeric(substr(Sys.Date(),1,4))-1`, and construct an appropriate 95% confidence interval.   

`r qend()`
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`
Here is our estimated average number of books read:  
```{r}
mean(bookdata$books_read)
```

And our standard error is still $\frac{s}{\sqrt{n}}$:  
```{r}
sd(bookdata$books_read)/sqrt(nrow(bookdata))
```

With $n = 7$ observations, and estimating 1 mean, we are left with $6$ degrees of freedom.  
For our 95% confidence interval, the $t^*$ in the formula below is obtained via:^[(Why 97.5? and not 95? We want the _middle_ 95%, and $t$-distributions are symmetric, so we want to split that 5% in half, so that 2.5% is on either side. We could have also used `qt(0.025, df = 6)`, which will just give us the same number but negative: `r qt(0.025, df = 6)`)]  
```{r}
qt(0.975, df = 6)
```

Our confidence interval is therefore:  
$$
\begin{align}
\text{CI} &= \bar{x} \pm t^* \times SE \\
\text{95\% CI} &= 14.286 \pm 2.447 \times 2.652 \\
\text{95\% CI} &= [7.80,\, 20.78] \\
\end{align}
$$

`r solend()`

`r qbegin(3)`
Will a 90% confidence interval be wider or narrow?  
Calculate it and see.  
`r qend()`
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

A 90% confidence interval will be narrower:  
```{r}
qt(0.95, df = 6)
```

$$
\begin{align}
\text{CI} &= \bar{x} \pm t^* \times SE \\
\text{90\% CI} &= 14.286 \pm 1.943 \times 2.652 \\
\text{90\% CI} &= [9.13,\, 19.44] \\
\end{align}
$$

The intuition behind this is that our level of confidence is inversely related to the width of the interval.   

Take it to the extremes:  

- I have 100% confidence that the interval $[-Infinity, +Infinity]$ contains the true population mean. 
- If I want an narrower interval, then I have to sacrifice confidence. e.g. a 10% CI: $[`r round(t.test(bookdata$books_read,conf.level=0.1)$conf.int[1],2)`, `r round(t.test(bookdata$books_read,conf.level=0.1)$conf.int[2],2)`]$

Imagine playing a game of [ringtoss](https://en.wikipedia.org/wiki/Ring_toss){target="_blank"}. A person throwing a 2-meter diameter hoop will have much more confidence that they are going to get it over the pole than a person throwing a 10cm diameter ring.  

`r solend()`

<div class="divider div-transparent div-dot"></div>

# Procrastination Scores

:::frame
> __Research Question__
> Do Edinburgh University students report endorsing procrastination less than the norm?  

The Procrastination Assessment Scale for Students (PASS) was designed to assess how individuals approach decision situations, specifically the tendency of individuals to postpone decisions (see [Solomon & Rothblum, 1984](http://dx.doi.org/10.1037/0022-0167.31.4.503)). The PASS assesses the prevalence of procrastination in six areas: writing a paper; studying for an exam; keeping up with reading; administrative tasks; attending meetings; and performing general tasks. For a measure of total endorsement of procrastination, responses to 18 questions (each measured on a 1-5 scale) are summed together, providing a single score for each participant (range 0 to 90). The mean score from Solomon & Rothblum, 1984 was 33.  

A student administers the PASS to 20 students from Edinburgh University.  
The data are available at [https://uoepsy.github.io/data/pass_scores.csv](https://uoepsy.github.io/data/pass_scores.csv).  
:::


`r qbegin(4)`

1. Read in the data
2. Calculate some relevant descriptive statistics
3. Check the assumptions that we will be concerned with for a one-sample test of whether the mean PASS scores is less than 33. 

::: {.callout-tip collapse="true"}
#### Hints

- What counts as "relevant statistics"? Think about the question. It concerns just one variable (the PASS scores), which is numeric. What's a nice way of describing the center and spread of such a variable?  

:::

`r qend()`
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`


::::panelset
:::panel
#### Data

```{r}
pass_scores <- read_csv("https://uoepsy.github.io/data/pass_scores.csv") 
dim(pass_scores)
head(pass_scores)
```

:::
:::panel
#### Descriptives

```{r}
pass_scores %>%
  summarise(
    mPASS = mean(PASS),
    sdPASS = sd(PASS),
    n = n()
  )
```

:::
:::panel
#### Assumptions

We want to check that the data are close to normally distributed. This is especially relevant as we have only 20 datapoints here. The plot below makes it look like we may have one or two data points in the tails of the distribution that are further than we might expect. 
```{r}
ggplot(pass_scores, aes(sample = PASS)) + 
  geom_qq() + 
  geom_qq_line()
```
But the Shapiro-Wilk test of $p > .05$ indicates that we are probably okay to continue with our t-test  
```{r}
shapiro.test(pass_scores$PASS)
```

:::
::::

`r solend()`


`r qbegin(5)`
Our test here is going to be have the following hypotheses:  

- __Null:__ mean PASS score in Edinburgh Uni students is $\geq 33$
- __Alternative:__ mean PASS score in Edinburgh Uni students is $< 33$ 

_Manually_ calculate the relevant test statistic.  
_Note, we're doing this manually right now as it's a useful learning process. In later questions we will switch to the easy way!_  

::: {.callout-tip collapse="true"}
#### Hints  

- you can see the manual calculation of a one sample t-test in [3B #one-sample-t-test](03b_inference2.html#one-sample-t-test){target="_blank"}. 
- The relevant formula is:  
$$
\begin{align}
& t =  \frac{\bar x - \mu_0}{\frac{s}{\sqrt{n}}} \\
\qquad \\
& \text{Where:} \\
& \bar x : \text{mean of PASS in our sample} \\
& \mu_0 : \text{hypothesised mean score of 33} \\
& s : \text{standard deviation of PASS in our sample} \\
& n : \text{number of observations}
\end{align}
$$
:::

`r qend()`
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}
pass_scores <- read_csv("https://uoepsy.github.io/data/pass_scores.csv") 

pass_scores %>% 
  summarise(
    xbar = mean(PASS),
    s = sd(PASS),
    n = n(),
    t = (xbar - 33)/(s / sqrt(n))
  )
```
`r solend()`

`r qbegin(6)`
Using the test statistic calculated in question 1, compute the p-value.  

::: {.callout-tip collapse="true"}
#### Hints  

- this will be needing the `pt()` function.
- the degrees of freedom is $n-1$ (we used one up by estimating the mean).
- The test we are performing is against the null hypothesis that the mean is $\geq 33$. Our t-statistic is in the broad sense calculated as "mean minus 33", so negative numbers mean we have a mean lower than 33. These are the instances that we will reject the null hypothesis - if we get a test statistic very low. So we want the lower.tail of the distribution for our p-value.  

:::

`r qend()`
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`
We have 20 participants, so $df=19$
```{r}
pt(-3.107272, df = 19, lower.tail = TRUE)
```
`r solend()`

`r qbegin(7)`
Now using the `t.test()` function, conduct the same test. Check that the numbers match with your manual calculations in the previous two questions.  

::: {.callout-tip collapse="true"}
#### Hints  
Check out the help page for `t.test()` - there is an argument in the function that allows us to easily change between whether our alternative hypothesis is "less than", "greater than" or "not equal to".  
:::

`r qend()`
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`
```{r}
t.test(pass_scores$PASS, mu = 33, alternative = "less")
```
The $t$ statistic, our $df$, and our $p$-value all match the manual calculations from the previous questions.  

The simple `t.test()` approach even gives us a confidence interval! Well.. half of one! This is because we conducted a one-sided test. Remember that null hypothesis significance testing is like asking "does our confidence interval contain zero?". With a one-sided test we only reject the null hypothesis if the test statistic is large in _one_ direction, and so our confidence interval is one-sided also.  


`r solend()`

`r qbegin(8)`
Create a visualisation to illustrate the results.  
`r qend()`
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}
#| label: fig-passfig
#| fig-cap: "Distribution of scores on the Procrastination Assessment Scale for Students (PASS) measure. The majority of the sample scored below the suggested normal score of 33 (red dashed line)."
#| fig.height: 3
#| fig.width: 5
ggplot(data = pass_scores, aes(x=PASS)) + 
  geom_boxplot() + 
  geom_vline(xintercept=33, lty="dashed", col="red")
```

`r solend()`


`r qbegin(9)`
Write up the results.  

::: {.callout-tip collapse="true"}
#### Hints  
There are some quick example write-ups for each test in [3B #basic-tests](03b_inference2.html#basic-tests){target="_blank"}
:::
`r qend()`
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`
```{r include=FALSE}
res2<-t.test(pass_scores$PASS, mu = 33, alternative = "less")
```

:::int
A one-sided one-sample t-test was conducted in order to determine if the average score on the Procrastination Assessment Scale for Students (PASS) for a sample of `r nrow(pass_scores)` students at Edinburgh University was significantly lower ($\alpha = .05$) than the average score of 33 obtained during development of the PASS. 

Edinburgh University students scored lower (Mean = `r mean(pass_scores$PASS) %>% round(2)`, SD = `r sd(pass_scores$PASS) %>% round(2)`) than the score reported by the authors of the PASS (Mean = 33). This difference was statistically significant ($t(`r nrow(pass_scores)-1`)=`r res2$statistic %>% round(2)`$, $p < .05$, one-tailed).  
:::
`r solend()`

<div class="divider div-transparent div-dot"></div>

# Heights 

:::frame
> __Research Question__
>  Is the average height of students taking the USMR statistic course in Psychology at Edinburgh University in 2022 is different from 165cm?  

```{r echo=FALSE, out.width="30%"}
knitr::include_graphics("images/hypothesis/playmo_tms.jpg")
```

You can access the data for students of USMR in 2022, along with students taking other courses, at: [https://uoepsy.github.io/data/surveydata_historical.csv](https://uoepsy.github.io/data/surveydata_historical.csv).  

:::


`r qbegin(10)`
No more manual calculations of test statistics and p-values for this week.  

Conduct a one sample $t$-test to evaluate whether the average height of students taking the USMR courses in Psychology at Edinburgh University in 2022 was different from 165cm.  

Make sure to consider the assumptions of the test! 

::: {.callout-tip collapse="true"}
#### Hints  

- This is *real data*, and [real data is rarely normal](https://dpananos.github.io/posts/2019/08/blog-post-23/)! If you conduct a Shapiro-Wilk test, you may well find $p<.05$ and conclude that your data is not normal.   
So what do we do if a test indicates our assumptions are violated?  
Well, we should bear a couple of things in mind.  
    1. A decision rule such as $p<.05$ on Shapiro-Wilk test creates very dichotomous thinking for something which is in reality not black and white. Real life distributions are not *either* normal *or* non-normal. Plot the data, and make a judgement!  
    2. As it happens, the t-test is actually reasonably robust against slight deviations from normality, especially if the sample size is "large enough" (rule-of-thumb n = 30) and the data are not heavily skewed. Plot your data and make a judgement!  

```{r}
#| label: fig-rules
#| fig-cap: "The deeper you get into statistics, the more you discover that it is not simply a case of following step-by-step rules."  
#| out-width: "80%"
#| echo: false
knitr::include_graphics("images/hypothesis/guidelines.gif")
```
:::

`r qend()`
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

::::panelset
:::panel
#### Data

We need to filter it to just the USMR students the 2022 cohort:  
```{r}
surveydata <- read_csv("https://uoepsy.github.io/data/surveydata_historical.csv")

usmr_data <- surveydata %>% 
  filter(course=="usmr", year==2022)

dim(usmr_data)
```

:::
:::panel
#### Descriptives

```{r}
usmr_data %>% 
  summarise(
    mheight = mean(height, na.rm = T),
    sdheight = sd(height, na.rm = T),
    n = sum(!is.na(height))
  )
```
:::
:::panel
#### Assumptions

The `shapiro.test()` suggests that our assumption of normality is not okay!  
(the p-value is $<.05$, suggesting that we reject the hypothesis that the data are drawn from a normally distributed population)  
```{r}
shapiro.test(usmr_data$height)
```

However, as always, visualisations are vital here. The histogram below doesn't look all that great, but the t.test is quite robust against slight violations of normality, especially as sample sizes increase beyond 30, and our data here doesn't look *too* non-normal (this is a judgement call here - over time you will start to get a sense of what you might deem worrisome in these plots!).  

```{r}
ggplot(data = usmr_data, aes(x = height)) + 
  geom_histogram(binwidth = 2.5) +
  # adding our hypothesised mean
  geom_vline(xintercept = 165) 
```
We can also take a quick look at the QQplot. The points follow the line closely apart from at the tail ends, matching the heavier tails of the distribution that are visible in the histogram above. 
```{r}
qqnorm(usmr_data$height)
qqline(usmr_data$height)
```

The data are not skewed, and we are working with a sample of `r sum(!is.na(usmr_data$height))`, which is likely large enough for us to feel satisfied that the $t$-test will lead us to valid inferences.  

:::
:::panel
#### t-test

```{r}
t.test(usmr_data$height, mu = 165, alternative = "two.sided")
```

:::
::::

`r solend()`

<div class="divider div-transparent div-dot"></div>

# Names and Tips  

:::frame
> __Research Question__
> Can a server earn higher tips simply by introducing themselves by name when greeting customers?

Researchers investigated the effect of a server introducing herself by name on restaurant tipping.
The study involved forty, 2-person parties eating a \$23.21 fixed-price buffet Sunday brunch at Charley Brown's Restaurant in Huntington Beach, California, on April 10 and 17, 1988.  

Each two-person party was randomly assigned by the waitress to either a name or a no-name condition. The total amount paid by each party at the end of their meal was then recorded.  
  
The data are available at [https://uoepsy.github.io/data/gerritysim.csv](https://uoepsy.github.io/data/gerritysim.csv). (This is a simulated example based on [Garrity and Degelman (1990)](https://doi.org/10.1111/j.1559-1816.1990.tb00405.x))  
:::

`r qbegin(11)`
Conduct an independent samples $t$-test to assess whether higher tips were earned when the server introduced themselves by name, in comparison to when they did not.    

::: {.callout-tip collapse="true"}
#### Hints  

- There is a direction in the research question stated above, which means we will want to set `alternative = ??`.  
- We'll want to check the normality (either visually or with a test) of the variable of interest _for each group_.  
- Some researchers suggest using the Welch t-test by default. This means you can relax the assumption of equal variances in the groups. If you want to _test_ whether two variances are equal, try the `var.test()` function.

:::
`r qend()`  

`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

::::panelset
:::panel
#### Data
```{r}
tipdata <- read_csv("https://uoepsy.github.io/data/gerritysim.csv")
dim(tipdata)
head(tipdata)
```

It might be nice to conduct our analysis on just the _tip_ given, and not the \$23.21 meal price + tip.  
```{r}
#make a "tip" column, which is minus the meal amount
tipdata <- 
  tipdata %>% mutate(
    tip = paid - 23.21
  )
```

:::
:::panel
#### Descriptives
  
```{r}
tipdata %>% 
  group_by(condition) %>%
  summarise(
    meantip = mean(tip),
    sdtip = sd(tip)
  )
```

:::
:::panel
#### Plot
```{r}
ggplot(data = tipdata, aes(x = tip, y = condition)) +
  geom_boxplot()
```
:::
:::panel
#### Assumptions  

According to these tests, we have normally distributed data for both groups, with equal variances. 
```{r}
shapiro.test(tipdata$tip[tipdata$condition=="name"])
shapiro.test(tipdata$tip[tipdata$condition=="no name"])
var.test(tip ~ condition, data = tipdata)
```

:::
:::panel
#### t-test  

Because the variances do not appear to be unequal, we can actually use the standard t-test with `var.equal = TRUE` if we want. However, we'll continue with the Welch t-test. 

Remember that our alternative hypothesis here is that the average tips in the "name" condition is greater than in the "no name" condition.  
R will take the levels in order here (alphabetically), and assume that the alternative is for that group, so we use `alternative = "greater"` here to say that the alternative is $\text{name}-\text{no name} > 0$.  
```{r}
t.test(tip ~ condition, data = tipdata, alternative = "greater")
```

:::
::::

`r solend()`

<div class="divider div-transparent div-dot"></div>

# Optional Extras

Here are a few extra questions for you to practice performing tests and making plots:  

`r qbegin(qlabel = FALSE, "Optional Extra 1")`

Are dogs heavier on average than cats?  
Data from Week 1: [https://uoepsy.github.io/data/pets_seattle.csv](https://uoepsy.github.io/data/pets_seattle.csv)  

::: {.callout-tip collapse="true"}
#### Hints  
  
- Remember from week 1 - not everything in that data is either a cat or a dog!  

:::
  
`r qend()`
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}
pets <- read.csv("https://uoepsy.github.io/data/pets_seattle.csv")
catsndogs <- pets[pets$species != "Goat", ]
```

In this case, we want to test whether $dogs > cats$. What we are testing then, whether $dogs - cats > 0$ or $cats - dogs < 0$.  
By default, as the `species` variable is a character, it will use alphabetical ordering, and `t.test()` will test $cats - dogs$. So we want our alternative hypothesis to be "less":  
```{r}
#| eval: false
t.test(weight_kg ~ species, catsndogs,
       alternative = "less")
```

An alternative is to set it as a factor, and specify the levels in the order we want:  
```{r}
catsndogs$species2 <- factor(catsndogs$species, levels = c("Dog","Cat"))
```
Which would then allow us to shove that into the `t.test()` and perform the same test, but using $dogs - cats$ instead. 

```{r}
t.test(weight_kg ~ species2, catsndogs,
       alternative = "greater")
```

```{r}
catsndogs %>%
  ggplot(aes(x=species,y=weight_kg)) + 
  geom_boxplot()
```

`r solend()`


`r qbegin(qlabel = FALSE, "Optional Extra 2")`
Is taking part in a cognitive behavioural therapy (CBT) based programme associated with a greater reduction, on average, in anxiety scores in comparison to a Control group?  
Data are at [https://uoepsy.github.io/data/dapr1_2122_report_data.csv](https://uoepsy.github.io/data/dapr1_2122_report_data.csv). The dataset contains information on each person in an organisation, recording their professional role (management vs employee), whether they are allocated into the CBT programme or not (control vs cbt), and scores on anxiety at both the start and the end of the study period.  

::: {.callout-tip collapse="true"}
#### Hints  

- you might have to make a new variable in order to test the research question. 

:::

`r qend()`
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

Because we're testing the _reduction_ in anxiety, we need to calculate it. By subtracting anxiety at time 2 from anxiety at time 1, we create a variable for which bigger values represent more reduction in anxiety  
```{r}
cbtanx <- read.csv("https://uoepsy.github.io/data/dapr1_2122_report_data.csv")

cbtanx <- cbtanx %>% mutate(reduction = anx_t1 - anx_t2)
```

And we can then test whether $cbt - control > 0$:  
```{r}
t.test(reduction ~ cbt, data = cbtanx, 
       alternative = "greater")
```
And to make sure we're getting things the right way around, make a plot:
```{r}
ggplot(cbtanx, aes(x=cbt, y=reduction))+
  geom_boxplot() + 
  labs(x="Experimental Group",y="Reduction in Anxiety across study")
```


`r solend()`

