---
title: "Week 5 Exercises: Cov, Cor, Models"
link-citations: yes
params: 
    SHOW_SOLS: FALSE
    TOGGLE: TRUE
---



```{r}
#| label: setup
#| include: false
source('assets/setup.R')
library(tidyverse)
library(patchwork)
set.seed(017)
```

`r qbegin(1)`
__Q1:__ Go to [http://guessthecorrelation.com/](http://guessthecorrelation.com/){target="_blank"} and play the "guess the correlation" game for a little while to get an idea of what different strengths and directions of $r$ can look like.
`r qend()`

# Sleepy time  

:::frame
__Data: Sleep levels and daytime functioning__  

A researcher is interested in the relationship between hours slept per night and self-rated effects of sleep on daytime functioning. She recruited 50 healthy adults, and collected data on the Total Sleep Time (TST) over the course of a seven day period via sleep-tracking devices.  
At the end of the seven day period, participants completed a Daytime Functioning (DTF) questionnaire. This involved participants rating their agreement with ten statements (see @tbl-sleepitems). Agreement was measured on a scale from 1-5. An overall score of daytime functioning can be calculated by:  

1. reversing the scores for items 4,5 and 6 (because those items reflect agreement with _positive_ statements, whereas the other ones are agreement with _negative_ statement);
2. summing the scores on each item; and 
3. subtracting the sum score from 50 (the max possible score). This will make higher scores reflect better perceived daytime functioning.  

The data is available at https://uoepsy.github.io/data/sleepdtf.csv. 
  
```{r}
#| label: tbl-sleepitems
#| echo: false
#| tbl-cap: Daytime Functioning Questionnaire
tibble(
  Item = paste0("Item_",1:10),
  Statement = c("I often felt an inability to concentrate","I frequently forgot things","I found thinking clearly required a lot of effort","I often felt happy","I had lots of energy","I worked efficiently","I often felt irritable" ,"I often felt stressed","I often felt sleepy", "I often felt fatigued")
) %>% gt::gt()
```
:::

`r qbegin(2)`
Read in the data, and calculate the overall daytime functioning score, following the criteria outlined above. Make this a new column in your dataset.

:::hints
To reverse items 4, 5 and 6, we we need to make all the scores of 1 become 5, scores of 2 become 4, and so on... What number satisfies all of these equations: `? - 5 = 1`, `? - 4 = 2`, `? - 3 = 3`?  
  
To quickly sum accross rows, you might find the `rowSums()` function useful (you don't have to use it though)
:::
`r qend()`
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`
```{r message=FALSE}
sleepdtf <- read_csv("https://uoepsy.github.io/data/sleepdtf.csv")
summary(sleepdtf)
```

To reverse the items, we can simply do 6 minus the score: 
```{r}
sleepdtf <- 
  sleepdtf %>% mutate(
    item_4=6-item_4,
    item_5=6-item_5,
    item_6=6-item_6
  ) 
```

Now we can use `rowSums()`, and subtract the sum scores from from 50 (the max score):  
```{r}
sleepdtf$dtf = 50-rowSums(sleepdtf[, 2:11])
```

An alternative way to do this would be: 

```{r}
#| eval: false
sleepdtf %>% 
  mutate(
    dtf = 50 - (item_1 + item_2 + item_3 + item_4 + item_5 + item_6 + item_7 + item_8 + item_9 + item_10)
  )
```





`r solend()`

`r qbegin(3)`
Calculate the correlation between the total sleep time (`TST`) and the overall daytime functioning score calculated in the previous question.  
Conduct a test to establish the probability of observing a correlation this strong in a sample of this size assuming the true correlation to be 0.  

Write a sentence or two summarising the results. 

:::hints
__Hints:__ 
You can do this all with one function, see [5A #correlation-test](05a_covcor.html#correlation-test){target="_blank"}.  
:::

`r qend()`
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`
```{r}
cor.test(sleepdtf$TST, sleepdtf$dtf)
```

:::int
There was a strong positive correlation between total sleep time and self-reported daytime functioning score ($r$ = `r cor(sleepdtf$TST, sleepdtf$dtf) %>% round(2)`, $t(48)$ = `r cor.test(sleepdtf$TST, sleepdtf$dtf)$statistic %>% round(2)`, $p < .001$) in the current sample. As total sleep time increased, levels of self-reported daytime functioning increased. 
:::
`r solend()`

`r qbegin("4 (open-ended)")`
Think about this relationship in terms of _causation_.  
<br>
Claim: _Less sleep causes poorer daytime functioning._  
<br>
Why might it be inappropriate to make the claim above based on these data alone? Think about what sort of study could provide stronger evidence for such a claim.  

:::hints
Things to think about:  

+ comparison groups.   
+ random allocation.  
+ measures of daytime functioning.   
+ measures of sleep time.  
+ other (unmeasured) explanatory variables.  

:::
`r qend()`

<div class="divider div-transparent div-dot"></div>

# Attendance and Attainment

:::frame
__Data: Education SIMD Indicators__  

The Scottish Government regularly collates data across a wide range of societal, geographic, and health indicators for every "datazone" (small area) in Scotland.  

The dataset at [https://uoepsy.github.io/data/simd20_educ.csv](https://uoepsy.github.io/data/simd20_educ.csv){target="_blank"} contains some of the education indicators (see @tbl-simd).  

```{r}
#| label: tbl-simd
#| echo: false
#| tbl-cap: "Education indicators from the 2020 SIMD data"  
tibble(
  variable=names(read_csv("../../data/simd20_educ.csv")),
  description=c("Areas of scotland containing populations of between 2.5k-6k household residents", 
                "Average School pupil attendance",
                "Average attainment score of School leavers (based on Scottish Credit and Qualifications Framework (SCQF))",
                "Proportion of 17-21 year olds entering university")
) %>% gt::gt()
```

:::

`r qbegin(5)`
Conduct a test of whether there is a correlation between school attendance and school attainment in Scotland.  

Present and write up the results.  

:::hints
__Hints:__  

The readings have _not_ included an example write-up for you to follow. Try to follow the logic of those for t-tests and $\chi^2$-tests. 

  - describe the relevant data
  - explain what test was conducted and why
  - present the relevant statistic, degrees of freedom (if applicable), statement on p-value, etc. 
  - state the conclusion.  
 
Be careful figuring out how many observations your test is conducted on. `cor.test()` includes only the _complete_ observations. 

:::

`r qend()`
`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`

```{r}
simd <- read_csv("https://uoepsy.github.io/data/simd20_educ.csv")
```

Here are the means of the two variables. We should remember that these calculations will include some observations which have missing data on the other variable.  
```{r}
simd %>% 
  summarise(
    m_attendance = mean(attendance, na.rm = TRUE),
    m_attainment = mean(attainment, na.rm = TRUE)
)
```
Instead, to match with out analysis, we might be inclined to filter our data to complete data:  
```{r}
simd_comp <- simd %>% 
  filter(!is.na(attendance) & !is.na(attainment))

simd_comp %>%
  summarise(
    m_attendance = mean(attendance),
    m_attainment = mean(attainment),
    sd_attendance = sd(attendance),
    sd_attainment = sd(attainment)
)
```

```{r}
cor.test(simd_comp$attendance, simd_comp$attainment)
```



:::int
```{r}
#| echo: false
res = cor.test(simd_comp$attendance, simd_comp$attainment)
```

A correlation test was conducted to assess whether there is a relationship between an area's average school attendance, and its average school attainment level. A total of `r nrow(simd_comp)` geographical areas were included in the analysis, with a mean school attendance of `r round(mean(simd_comp$attendance),2)` (SD = `r round(sd(simd_comp$attendance),2)`) and a mean school attainment score of `r round(mean(simd_comp$attainment),2)` (SD = `r round(sd(simd_comp$attainment),2)`).  
There was a strong positive correlation between a geographical area's level of school attendance and its school attainment ($r$ = `r round(res$estimate,2)`, $t(`r res$parameter`$ = `r round(res$statistic,2)`, $p `r format.pval(res$p.value,eps = .001)`$). We therefore reject the null hypothesis that there is no correlation between an area's school attendance and attainment. @fig-simdplot provides a visualisation of the relationship.  

```{r}
#| code-fold: true
ggplot(simd_comp, aes(x=attendance, y=attainment)) + 
  geom_point() + 
  labs(x = "Average school attendance",
       y = "Average school attainment")
```

:::


`r optbegin("Optional: some extra plotting bits")`

Sometimes we may want to highlight certain parts of a plot. We can do that using the __gghighlight__ package, and giving it a set of conditions (like we do for `filter()`) in order for it to decide which points to highlight.  
You can see an example below.  
We have also created the title by referring to the `cor()` function, and 'paste'ing it together to "r = " 

```{r}
library(gghighlight)

ggplot(simd_comp, aes(x=attendance, y=attainment)) + 
  geom_point() + 
  gghighlight( (attainment>6 & attendance<.75) | 
               attendance > .95 | 
               (attendance > .82 & attainment<5),
               label_key = intermediate_zone) + 
  labs(x = "Average school attendance",
       y = "Average school attainment",
       title = paste0("r = ",
                       round(
                         cor(simd_comp$attendance,
                                  simd_comp$attainment),
                         2)
                       ))
```
`r optend()`


`r solend()`


<div class="divider div-transparent div-dot"></div>



# Functions and Models

`r qbegin(6)`
The Scottish National Gallery kindly provided us with measurements of side and perimeter (in metres) for a sample of 10 square paintings.

The data are provided below:  
_Note: this is a way of creating a "tibble" (a dataframe in 'tidyverse-style' language) in R, rather than reading one in from an external file._  
```{r eval=FALSE}
sng <- tibble(
  side = c(1.3, 0.75, 2, 0.5, 0.3, 1.1, 2.3, 0.85, 1.1, 0.2),
  perimeter = c(5.2, 3.0, 8.0, 2.0, 1.2, 4.4, 9.2, 3.4, 4.4, 0.8)
)
```

Plot the data from the Scottish National Gallery using `ggplot()`, with the side measurements of the paintings on the x-axis, and the perimeter measurements on the y-axis.  
  
We know that there is a mathematical model for the relationship between the side-length and perimeter of squares: $perimeter = 4 \times \ side$.  

Try adding the following line to your plot:
```{r eval=FALSE}
  stat_function(fun = ~.x * 4)
```
`r qend()`
`r solbegin(show = params$SHOW_SOLS, toggle = params$TOGGLE)`
```{r}
#| label: fig-squares-scatterplot
#| fig.cap: 'The exact relationship between side and perimeter of squares.'
sng <- tibble(
  side = c(1.3, 0.75, 2, 0.5, 0.3, 1.1, 2.3, 0.85, 1.1, 0.2),
  perimeter = c(5.2, 3.0, 8.0, 2.0, 1.2, 4.4, 9.2, 3.4, 4.4, 0.8)
)

ggplot(data = sng, aes(x = side, y = perimeter)) +
  geom_point(colour = 'black', alpha = 0.5, size = 3) +
  labs(x = 'Side (m)', y = 'Perimeter (m)')+
  stat_function(fun = ~.x * 4)
```

The above plot shows perfect agreement between the observed data and the model.
`r solend()`

`r qbegin(7)`
Use our mathematical model to predict the perimeter of a painting with a side of 1.5 metres.  

:::hints
__Hints:__  
We don't have a painting with a side of 1.5 metres within the random sample of paintings from the Scottish National Gallery, but we can work out the perimeter of an hypothetical square painting with 1.5m sides, using our model - either using the plot from the previous question, or calculating it algebraically.  
:::

`r qend()`
`r solbegin(show = params$SHOW_SOLS, toggle = params$TOGGLE)`
**Visual approach**

```{r echo=FALSE}
ggplot(data = sng, aes(x = side, y = perimeter)) +
  geom_point(colour = 'black', alpha = 0.5, size = 3) +
  labs(x = 'Side (m)', y = 'Perimeter (m)')+
  stat_function(fun = ~.x * 4) +
  geom_segment(aes(x = 1.5, xend = 1.5, y = 0, yend = 4 * 1.5), linetype = 2, 
               colour = 'red', arrow = arrow(length = unit(0.5, "cm"))) +
  geom_segment(aes(x = 1.5, xend = 0 , y = 4 * 1.5, yend = 4 * 1.5), linetype = 2, 
               colour = 'red', arrow = arrow(length = unit(0.5, "cm"))) +
  labs(x = 'Side (m)', y = 'Perimeter (m)')
```

Sometimes we can directly read a predicted value from the graph of the functional relationship.

Consider the plot created in the previous question. First, we need to check where x = 1.5. Then, we draw a vertical dashed line until it meets the blue line. The y value corresponding to x = 1.5 can be read off the y-axis.

However, in this case it is not that easy to read it from the drawing... Let's try the next approach.

<br>
**Algebraic approach**

You can substitute the x value in the formula and calculate the corresponding y value.
$$
\begin{align}
perimeter &= 4 \times \ side \\
&= 4 \times \ (1.5) \\
&= 6
\end{align}
$$

<br>

:::int
The predicted perimeter of squared paintings having a 1.5m side is 6m.
:::

**NOTE**: Don't forget to always include the measurement units when reporting/writing-up results!

`r solend()`

:::frame
__Data: HandHeight__

This dataset, from Jessican M Utts and Robert F Heckard. 2015. _Mind on Statistics_ (Cengage Learning)., records the height and handspan reported by a random sample of 167 students as part of a class survey.  

The variables are:

- `height`, measured in inches
- `handspan`, measured in centimetres

The data are available at [https://uoepsy.github.io/data/handheight.csv](https://uoepsy.github.io/data/handheight.csv){target="_blank"}

:::

`r qbegin(8)`
Consider the relationship between height (in inches) and handspan (in cm).  

Read the handheight data into R, and investigate (visually) how handspan varies as a function of height for the students in the sample.

Do you notice any outliers or points that do not fit with the pattern in the rest of the data? 

Comment on any main differences you notice between this relationship and the relationship between sides and perimeter of squares.
`r qend()`
`r solbegin(show = params$SHOW_SOLS, toggle = params$TOGGLE)`
The `handheight` data set contains two variables, height and handspan, which are both numeric and continuous. We display the relationship between two numeric variables with a scatterplot.  

We can also add marginal boxplots for each variable using the package `ggExtra`. Before using the package, make sure you have it installed via `install.packages('ggExtra')`.

```{r}
#| label: fig-handheight-scatterplot
#| fig.cap: 'The statistical relationship between height and handspan.'
handheight <- read_csv(file = 'https://uoepsy.github.io/data/handheight.csv')

library(ggExtra)

plt <- ggplot(handheight, aes(x = height, y = handspan)) +
  geom_point(size = 3, alpha = 0.5) +
  labs(x = 'Height (in.)', y = 'Handspan (cm)')

ggMarginal(plt, type = 'boxplot')
```

Outliers are extreme observations that do not seem to fit with the rest of the data. This could either be:

- *marginally* along one axis: points that have an unusual (too high or too low) x-coordinate or y-coordinate;
- *jointly*: observations that do not fit with the rest of the point cloud.

The boxplots in fig-handheight-scatterplot do not highlight any outliers in the marginal distributions of height and handspan.
Furthermore, from the scatterplot we do not notice any extreme observations or points that do not fit with the rest of the point cloud.

We notice a moderate, positive (that is, increasing) linear relationship between height and handspan.

Recall @fig-squares-scatterplot, displaying the relationship between side and perimeters of squares.
In the plot we notice two points on top of each other, reflecting the fact that two squares having the same side will always have the same perimeter.
In fact, the data from the Scottish National Gallery include two squared paintings with a side of 1.1m, both having a measured perimeter of 4.4m.

fig-handheight-scatterplot, instead, displays the relationship between height and handspan of a sample of students. The first thing that grabs our attention is the fact that students having the same height do not necessarily have the same handspan. Rather, we clearly see a variety of handspan values for students all having a height of, for example, 70in. To be more precise, the seven students who are 70 in. tall all have differing handspans.
`r solend()`

`r qbegin(9)`
Hopefully, as part of the previous question, you created a scatterplot of handspans against heights. If not, make one now.  

Try adding the following line of code to the scatterplot. It will add a best-fit line describing how handspan varies as a function of height.
For the moment, the argument `se = FALSE` tells R to not display uncertainty bands.
```{r}
#| eval: false
geom_smooth(method = lm, se = FALSE)
```

Think about the differences you notice with between this and the figure you made in Question 6.  
`r qend()`
`r solbegin(show = params$SHOW_SOLS, toggle = params$TOGGLE)`
```{r}
#| label: fig-handheight-fitted-model
#| fig-cap: 'The best-fit line.'
ggplot(handheight, aes(x = height, y = handspan)) +
  geom_point(size = 3, alpha = 0.5) +
  geom_smooth(method = lm, se = FALSE) +
  labs(x = 'Height (in.)', y = 'Handspan (cm)')
```

The line representing the relationship between side and perimeter of squares (@fig-squares-scatterplot) is able to predict the actual perimeter value from the measurement of the side of a square. This is possible because the relationship between side and perimeter is an **exact** one. That is, any squares having the same side will have the same perimeter, and there will be no variation in those values.

The line that best fits the relationship between height and handspan (@fig-handheight-fitted-model) is only able to predict the **average** handspan for a given value of height. This is because there will be a distribution of handspans at each value of height. The line will fit the trend/pattern in the values, but there will be individual-to-individual variability that we must accept around that average pattern.
`r solend()`


:::statbox
Relationships such as that between height and handspan show deviations from an "average pattern". To model this, we need need to create a model that allows for deviations from the linear relationship. This is called a _statistical_ model.  

A statistical model includes **both** a deterministic function and a random error term:
$$
Handspan = \beta_0 + \beta_1 \ Height + \epsilon
$$
or, in short,
$$
y = \underbrace{\beta_0 + \beta_1 \ x}_{f(x)} + \underbrace{\epsilon}_{\text{random error}}
$$

The deterministic function $f(x)$ need not be linear if the scatterplot displays signs of nonlinearity, but in this course we focus primarily on linear relationships.   

In the equation above, the terms $\beta_0$ and $\beta_1$ are numbers specifying where the line going through the data meets the y-axis and its slope (rate of increase/decrease). 
:::

`r qbegin(10)`
```{r eval=FALSE, echo=FALSE}
mdl <- lm(handspan ~ 1 + height, data = handheight)
equatiomatic::extract_eq(mdl, ital_vars = TRUE, use_coefs = TRUE)
```
The line of best-fit is given by:^[Yes, the error term is gone. This is because the line of best-fit gives you the prediction of the average handspan for a given height, and not the individual handspan of a person, which will almost surely be different from the prediction of the line.]
$$
\widehat{Handspan} = -3 + 0.35 \ Height
$$

What is your best guess for the handspan of a student who is 73in tall?

And for students who are 5in?
`r qend()`
`r solbegin(show = params$SHOW_SOLS, toggle = params$TOGGLE)`
The predicted average handspan for students who are 73in tall is $-3 + 0.35 * 73 = 22.55$cm.

The predicted average handspan for students who are 5in tall is $-3 + 0.35 * 5 = -1.25$cm. 
But wait, handspan can not be negative... This does not make any sense!
That's right, we went too far off the range of the available data on heights, which were between 57in and 78in. We extrapolated. This is very dangerous...

```{r}
#| label: fig-xkcd2
#| echo: false
#| fig.cap: 'Source: Randall Munroe, xkcd.com'
knitr::include_graphics('https://imgs.xkcd.com/comics/extrapolating.png')
```
`r solend()`



<div class="tocify-extend-page" data-unique="tocify-extend-page" style="height: 0;"></div>

