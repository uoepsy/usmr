{"title":"Exercises: Binomial & Chi-Square Tests","markdown":{"yaml":{"title":"Exercises: Binomial & Chi-Square Tests","params":{"SHOW_SOLS":false,"TOGGLE":true},"editor_options":{"chunk_output_type":"console"}},"headingText":"Binomials","containsRefs":false,"markdown":"\n\n\n```{r}\n#| label: setup\n#| include: false\nsource('assets/setup.R')\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(xaringanExtra)\nxaringanExtra::use_panelset()\nqcounter <- function(){\n  if(!exists(\"qcounter_i\")){\n    qcounter_i <<- 1\n  }else{\n    qcounter_i <<- qcounter_i + 1\n  }\n  qcounter_i\n}\nset.seed(017)\n```\n\n\n## Cats n Dogs\n\n> **Research Question:** Is the probability that a student prefers Dogs over Cats greater than 50%?\n\n:::frame\n__Data: Past Surveys__  \nIn the last few years, we have asked students of the statistics courses in the Psychology department to fill out a little survey.  \nAnonymised data are available at [https://uoepsy.github.io/data/surveydata_historical.csv](https://uoepsy.github.io/data/surveydata_historical.csv).  \n\n__Note:__ this does _not_ contain the responses from this year. \n\n```{r}\nsurveydata <- \n  read_csv(\"https://uoepsy.github.io/data/surveydata_historical.csv\")\n```\n:::\n\n\n`r qbegin(qcounter())`\nCalculate the proportion of students who chose cats vs dogs in the survey.\nIf the probability that a student prefers dogs to cats is 50%, what would we _expect_ to see?  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \n`table() |> prop.table()` might be the quickest way here.   \n:::\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n\nI sometimes like adding a `|> print() |>` in the middle of these sequences of pipes to print out the intermediary output as well:  \n```{r}\ntable(surveydata$catdog) |>\n  print() |>\n  prop.table()\n```\n\nIf the probability was 50%, or 0.5, then we would expect the numbers to be equal. We have `r sum(!is.na(surveydata$catdog))` responses here, so we would expect `r sum(!is.na(surveydata$catdog))/2` to be team cats, and `r sum(!is.na(surveydata$catdog))/2` to be team dogs!  \n\n`r solend()`\n\n`r qbegin(qcounter())`\n> **Research Question:** Is the probability that a student prefers Dogs over Cats **greater** than 50%?\n\nConduct a test to address the research question.  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\n- Note the \"tailedness\" of the question. Just like `t.test()`, the function we use here should allow us to specify our hypothesis.  \n- You can see an example of this test in [4A #binomials](04a_chisq.html#binomials){target=\"_blank\"}.   \n\n:::\n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n\nWe're going to want to use the `binom.test()` function. This is just like the reading, where we tested the proportion of our sample who were left-handed.  \n\nWe can either type in the numbers of \"Dog\" people out of our total number:\n```{r}\nbinom.test(317, 539, p = 0.5, alternative = \"greater\")\n```\nOr give the function a table.  \n_BUT_ we need to make sure that it is picking up the right value as \"successes\".  \nNotice that this gives us a different result:\n```{r}\n#| echo: false\ntable(surveydata$catdog) |>\n  binom.test(p = 0.5, alternative = \"greater\")\n```\nThis is because it is taking the first entry as the number of successes. So it is saying that Cat people = 1 and Dog people = 0. But we want it the other way around! You could either create a different table (or switch its order), or simply switch to the alternative being \"less\" (because in this unrealistic binary world, the question \"is the probability of being Dog person >0.5?\" is the same thing as \"is probability of being Cat person <0.5?\")\n\n\n`r solend()`\n\n\n\n\n# Chi-Square Tests\n\n## Birth-Months\n\n> **Research Question:** Are students more likely to be born in certain months than others?  \n\n:::frame\n__Data: Past Surveys__  \nIn the last few years, we have asked students of the statistics courses in the Psychology department to fill out a little survey.  \nAnonymised data are available at [https://uoepsy.github.io/data/surveydata_historical.csv](https://uoepsy.github.io/data/surveydata_historical.csv).  \n\n__Note:__ this does _not_ contain the responses from this year. \n\n```{r}\nsurveydata <- \n  read_csv(\"https://uoepsy.github.io/data/surveydata_historical.csv\")\n```\n:::\n\n\n`r qbegin(qcounter())`\nWhat is your intuition about the distribution of all students' birth-months?  \nDo you think they will be spread uniformly across all months of the year (like a fair 12-sided dice), or do you think people are more likely to be born in certain months more than others?  \n\nPlot the distribution and get an initial idea of how things are looking.  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \nYou can do this quickly with `barplot()` and `table()`, or you could create try using `ggplot()` and looking into `geom_bar()`.  \n:::\n`r qend()`\n\n`r solbegin(show=params$SHOW, toggle=params$TOGGLE)`\nThe quick and dirty way to plot:\n```{r}\nbarplot(table(surveydata$birthmonth))\n```\n\nA ggplot option:\n```{r}\nggplot(data = surveydata, aes(x = birthmonth)) +\n    geom_bar() +\n    labs(x = \"- Birth Month -\")\n```\n`r solend()`\n\n`r qbegin(qcounter())`\nWe're going to perform a statistical test to assess the extent to which our data conforms to the hypothesis that people are no more likely to be born on one month than another.  \n\nUnder this hypothesis, what would be the proportional breakdown of observed births in each of the months?  \n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\nIf people are no more likely to be born in one month than another, then we would expect the same proportion of observed births in each month.  \nThere are 12 months, so we would expect $\\frac{1}{12}$ observations in each month.  \n\nWe can write these as: \n$$\n\\begin{align}\n& p_{jan} = 1/12 \\\\\n& p_{feb} = 1/12 \\\\\n& ... \\\\\n& p_{dec} = 1/12 \\\\\n\\end{align}\n$$\n`r solend()`\n\n`r qbegin(qcounter())`\n\nHow many observations in our sample would we *expect* to find with a birthday in January? And in February? ... and so on?  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\nHow many responses (i.e. not missing values) do we have for this question?  \n\n:::\n\n`r qend()`\n\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\nThere are `r sum(!is.na(surveydata$birthmonth))` people who have non-NA values (`sum(!is.na(surveydata$birthmonth))`).  \n\nUnder the null hypothesis, we would expect $\\frac{1}{12} \\times$ `r sum(!is.na(surveydata$birthmonth))` = `r round(sum(!is.na(surveydata$birthmonth))/12,2)` observations born in each month. \n`r solend()`\n\n`r qbegin(qcounter())`\nThe code below creates counts for each month. Before doing that, it removes the rows which have an NA in them for birthmonth: \n```{r}\n#| eval: false\nsurveydata |>\n  filter(!is.na(birthmonth)) |>\n  group_by(birthmonth) |>\n  summarise(\n      observed = n()\n  )\n```\n(A shortcut for this would be `surveydata |> filter(!is.na(birthmonth)) |> count(birthmonth)`)  \n\nAdd to the code above to create columns showing:\n\n- the expected counts $E_i$\n- observed-expected ($O_i - E_i$)\n- the squared differences $(O_i - E_i)^2$\n- the standardised square differences $\\frac{(O_i - E_i)^2}{E_i}$  \n\nThen calculate the $\\chi^2$ statistic (the sum of the standardised squared differences).  \nIf your observed counts matched the expected counts *perfectly*, what would the $\\chi^2$ statistic be? \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \nThis was all done in the step-by-step example of a $\\chi^2$ test in [4A #chi2-goodness-of-fit-test](04a_chisq.html#chi2-goodness-of-fit-test){target=\"_blank\"}\n:::\n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n```{r}\nchi_table <- \n    surveydata |>\n    filter(!is.na(birthmonth)) |>\n    group_by(birthmonth) |>\n    summarise(\n        observed = n(),\n        expected = sum(!is.na(surveydata$birthmonth))/12,\n        diff = observed-expected,\n        sq_diff = diff^2,\n        std_sq_diff = sq_diff / expected\n    )\nchi_table\n```\n\nAnd we can calculate our $\\chi^2$ test statistic by simply summing the values in the last column we created:\n```{r}\nsum(chi_table$std_sq_diff)\n```\n\nIf all our observed counts are equal to our expected counts, then the `diff` column above will be all $0$, and $0^2=0$, and $\\frac{0}{E_i}$ will be $0$. So $\\chi^2$ will be $0$. \n`r solend()`\n\n`r qbegin(qcounter())`\nYou can see the distribution of $\\chi^2$ statistics with different degrees of freedom below.  \n```{r}\n#| label: fig-chidist\n#| echo: false\n#| fig.cap: \"Chi-Square Distributions\"\nknitr::include_graphics(\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Chi-square_pdf.svg/1200px-Chi-square_pdf.svg.png\")\n```\n\nWe can find out the proportion of the distribution which falls to either side of a given value of $\\chi^2$ using `pchisq()`. We need to give it our calculated $\\chi^2$ statistic, our degrees of freedom (`df`), which is equal to the number of categories minus 1. We also need to specify whether we want the proportion to the left (`lower.tail=TRUE`) or to the right (`lower.tail=FALSE`).  \n\n1. Using `pchisq()`, calculate the probability of observing a $\\chi^2$ statistic as least as extreme as the one we have calculated.  \n2. Check that these results match with those provided by R's built-in function: `chisq.test(table(surveydata$birthmonth))` (the `table` function will ignore NAs by default, so we don't need to do anything extra for this).    \n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n```{r}\nsum(chi_table$std_sq_diff)\npchisq(sum(chi_table$std_sq_diff), df = 11, lower.tail = FALSE)\n```\n\n```{r}\nchisq.test(table(surveydata$birthmonth))\n```\n`r solend()`\n\n`r qbegin(qcounter())`\nWhich months of year had the highest contributions to the chi-square test statistic?  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \nThink about your standardised squared deviations. \n:::\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n**Standardized squared deviations**  \n\nOne possible way to answer this question is to look at the individual contribution of each category to the $\\chi^2$ statistic. We computed these values in an earlier question.  \n```{r}\nchi_table |>\n  select(birthmonth, std_sq_diff)\n```\n\nFrom the barplot we created earlier on, we can see which months make up higher/lower proportions than expected:\n```{r}\nggplot(chi_table, aes(x = birthmonth, y = observed/nrow(surveydata))) +\n  geom_col(fill = 'lightblue') +\n  geom_hline(yintercept = 1/12, color = 'red') +\n  theme_classic(base_size = 15)\n```\n\n**Pearson residuals**\n\nEquivalently, you could answer by looking at Pearson residuals:\n```{r}\nchisq.test(table(surveydata$birthmonth))$residuals\n```\n\n```{r}\n#| echo: false\npresids <- chisq.test(table(surveydata$birthmonth))$residuals\npresids <- presids[order(abs(presids),decreasing = TRUE)]\n```\n\nThe greatest *absolute* values are for `r names(presids)[1]` and `r names(presids)[2]`, showing that for these months the deviations from expected to observed were the greatest. \n\n`r solend()`\n\n## Children's Favourite Colours\n\n> **Research Question:** Do childrens' favourite colours correspond to the those suggested by the internet?  \n\n:::frame\nAccording to one part of the internet, 30% of children have red as their favourite colour, 20% have blue, 15% yellow, 11% purple, 9% green, and 15% prefer some other colour.  \n\nWe collected data from 50 children aged between 2 and 5, and got them to choose one of a set of objects that were identical apart from colour. You can see the data in @tbl-childcols\n\n```{r}\n#| label: tbl-childcols\n#| tbl-cap: \"Colour preferences of 50 children aged between 2 and 5\"\n#| echo: false\nset.seed(33)\nchildren = sample(c(\"red\",\"blue\",\"yellow\",\"purple\",\"green\",\"other\"), size = 50, replace = TRUE, \n       prob = c(.25,.20,.2,.15,.10,.1)) |>\n  table() |> as.data.frame() |> rename(colour=Var1)\ngt::gt(children)\n```\n:::\n\n`r qbegin(qcounter())`\nPerform a $\\chi^2$ goodness of fit test to assess the extent to which our sample of children conform to this theorised distribution of colour preferences.  \n\nNo need to do this manually - once is enough. Just go straight to using the `chisq.test()` function.  \nHowever, we will need to get the numbers into R somehow.. \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \nYou can make a table from scratch using, for example: `as.table(c(1,2,3,4,5))`.  \n\nFor the test, try using `chisq.test(..., p = c(?,?,?,...) )`.  \nWe saw the use of `chisq.test()` in the example goodness of fit test, [4A #chi2-goodness-of-fit-test](04a_chisq.html#chi2-goodness-of-fit-test){target=\"_blank\"}  \n:::\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\nLet's get the data in:  \n```{r}\nchildcols <- as.table(c(10,6,3,8,8,15))\nnames(childcols) <- c(\"blue\",\"green\",\"other\",\"purple\",\"red\",\"yellow\")\nchildcols\n```\nOur theoretical probabilities of different colours must match the order in the table which we give `chisq.test()`. They must also always sum to 1.  \n\n```{r}\n#| warning: true\n#| message: true\nchisq.test(childcols, p = c(.20,.09,.15,.11,.30,.15))\n```\n\nNote, we get a warning here of <span style=\"color:blue\">\"Chi-squared approximation may be incorrect\"</span>. This is because some of the expected cell counts are <5.  \n```{r}\n#| warning: false\n#| message: false\nchisq.test(childcols, \n           p = c(.20,.09,.15,.11,.30,.15))$expected\n```\n\nThere are a couple of options here, but the easiest is to use the functionality of `chisq.test()` that allows us to compute the p-value by using a simulation (similar to the idea we saw in [2B#sampling-&-sampling-distributions](02b_sampling.html#sampling-sampling-distributions){target=\"_blank\"}), rather than by comparing it to a theoretical $\\chi^2$ distribution.  We can do this by using:  \n\n```{r}\nchisq.test(childcols, p = c(.20,.09,.15,.11,.30,.15),\n           simulate.p.value = TRUE)\n```\n\n`r solend()`\n\n`r qbegin(qcounter())`\nWhat are the *observed* proportions of children who prefer each colour?  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\nLook up the `prop.table()` function?  \n\n:::\n\n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\nFrom the help documentation (`?prop.table()`), we see that we can pass `prop.table()` the argument `x`, which needs to be a table. \n```{r}\nprop.table(childcols)*100\n```\n\n```{r}\nbarplot(prop.table(childcols)*100)\n```\n`r solend()`\n\n<div class=\"divider div-transparent div-dot\"></div>\n\n## Jokes and Tips\n\n:::frame\n__Data: TipJokes__  \n\n> **Research Question:** Can telling a joke affect whether or not a waiter in a coffee bar receives a tip from a customer?  \n\nA [study](https://doi.org/10.1111/j.1559-1816.2002.tb00266.x) published in the Journal of Applied Social Psychology^[Gueaguen, N. (2002). The Effects of a Joke on Tipping When It Is Delivered at the Same Time as the Bill. _Journal of Applied Social Psychology, 32_(9), 1955-1963.] investigated this question at a coffee bar of a famous seaside resort on the west Atlantic coast of France. \nThe waiter randomly assigned coffee-ordering customers to one of three groups. \nWhen receiving the bill, one group also received a card telling a joke, another group received a card containing an advertisement for a local restaurant, and a third group received no card at all. \n\nThe data are available at https://uoepsy.github.io/data/TipJoke.csv.  \nThe dataset contains the variables:\n\n- `Card`: None, Joke, Ad.\n- `Tip`: 1 = The customer left a tip, 0 = The customer did not leave tip. \n\n:::\n\n\n`r qbegin(qcounter())`\nProduce a plot and a table to display the relationship between whether or not the customer left a tip, and what (if any) card they received alongside the bill.  \n\nDon't worry about making it all pretty. Mosaic plots in R are a bit difficult. \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \n`plot(table(...))` will give you something. You can see one in the example $\\chi^2$ test of independence,[4A #chi2-test-of-independence](04a_chisq.html#chi2-test-of-independence){target=\"_blank\"}.  \n:::\n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n```{r}\ntipjoke <- read_csv('https://uoepsy.github.io/data/TipJoke.csv')\n\ntable(tipjoke$Card, tipjoke$Tip)\n\nplot(table(tipjoke$Card, tipjoke$Tip))\n```\n`r solend()`\n\n`r qbegin(qcounter())`\nWhat would you *expect* the cell counts to look like if there were no relationship between what the waiter left and whether or not the customer tipped?  \n\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\nThink about what proportion of customers tipped. \nThen work out how many customers got each type of card. If there were no relationship, then the proportions would be the same in each group. \n\n:::\n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\nIn total, 60 customers tipped (14+30+16), and 151 did not. So *overall*, 0.28 ($\\frac{60}{(60+151)}$) of customers tip.  \n\n74 customers got an Ad card, 72 customers got a Joke, and 65 got None. If this were independent of whether or not they left a tip, we would expect equal proportions of tippers in each group.  \nSo we would expect 0.28 of each group to leave a tip.  \n\n::: {.callout-caution collapse=\"true\"}\n#### some calculations\n\nYou can think about observed vs expected by looking at the two-way table along with the marginal row and column totals given:   \n```{r}\n#| echo: false\ntable(tipjoke$Card, tipjoke$Tip) %>%\n  rbind(colSums(.)) %>%\n  cbind(rowSums(.)) -> conttable\nconttable[1:3,1:2]<-\"  \"\nconttable |> knitr::kable() |>\n  kableExtra::kable_styling()\n```\nFor a given cell of the table we can calculate the expected count as $\\text{row total} \\times \\frac{\\text{column total}}{\\text{samplesize}}$:\n\n**Expected:**\n```{r}\n#| echo: false\ntable(tipjoke$Card, tipjoke$Tip) %>%\n  rbind(colSums(.)) %>%\n  cbind(rowSums(.)) -> conttable\nconttable[1:3,1]<-round(conttable[1:3,3]*(conttable[4,1])/conttable[4,3],2)\nconttable[1:3,2]<-round(conttable[1:3,3]*(conttable[4,2])/conttable[4,3],2)\nconttable |> knitr::kable() |>\n  kableExtra::kable_styling()\n```\n\n\nIf you're wondering how we do this in R.. \nhere's our table:  \n```{r}\nt <- tipjoke |>\n  select(Card, Tip) |> table()\nt\n```\nHere are the row totals:  \n```{r}\nrowSums(t)\n```\nand column totals divided by total:\n```{r}\ncolSums(t) / sum(t)\n```\n\nthere's a complicated bit of code using `%o%` which could do this for us. You don't need to remember %o%, it's very rarely used): \n```{r}\ne <- rowSums(t) %o% colSums(t) / sum(t)\ne\n```\n\nOr, alternatively, do it one by one:  \n```{r}\nrowSums(t) * (colSums(t) / sum(t))[1]\nrowSums(t) * (colSums(t) / sum(t))[2]\n```\n\n:::\n\n`r solend()`\n\n`r qbegin(qcounter())`\nJust like we gave the `chisq.test()` function a table of observed frequencies when we conducted a goodness of fit test in earlier exercises, we can give it a two-way table of observed frequencies to conduct a test of independence.  \n\nTry it now.  \n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n```{r}\nchisq.test(table(tipjoke$Card, tipjoke$Tip))\n```\n`r solend()`\n\n\n<div class=\"divider div-transparent div-dot\"></div>\n\n# Some RMarkdown/Quarto\n\n```{r}\n#| include: false\npass_scores <- read_csv(\"https://uoepsy.github.io/data/pass_scores.csv\")\nres2<-t.test(pass_scores$PASS, mu = 33, alternative = \"less\")\n```\n\n\nUsing one of the $t$-tests we saw in the previous week's exercises, we can use an RMarkdown document in which we write our results so that they get compiled to look nice and pretty:  \n\n::: {.panelset}\n\n::: {.panel}\n#### Writing this\n\n```{r echo=FALSE, out.width=\"1000px\"}\nknitr::include_graphics(\"images/hypothesis/rmarkdownbacktick.png\")\n```\n\n:::\n::: {.panel}\n#### Compiles to this\n\n:::frame\n\nA one-sided one-sample t-test was conducted in order to determine if the average score on the Procrastination Assessment Scale for Students (PASS) for a sample of `r nrow(pass_scores)` students at Edinburgh University was significantly lower ($\\alpha = .05$) than the average score obtained during development of the PASS. \n\nEdinburgh University students scored lower (Mean = `r round(mean(pass_scores$PASS),2)`, SD = `r round(sd(pass_scores$PASS), 2)`) than the score reported by the authors of the PASS (Mean = 33). This difference was statistically significant (t(`r nrow(pass_scores)-1`)=`r round(res2$statistic, 2)`, p < .05, one-tailed).  \n\n\n:::\n\n:::\n\n:::\n\nThis is one of the huge benefits of RMarkdown (and \"Quarto\" which is basically RMarkdown v2!). Imagine we collected more data - we wouldn't have to edit all the results, we could simply recompile and they would update for us!  \nNote how it works:  \n\n  - the code chunk saves the results of the `t.test()` function as a named object `res2`.\n  - in text, the backticks <code>&grave;r ... ... ... &grave;</code> are used to execute small bits of R code, and include the output within the text. For instance, the line <code>&grave;r res2\\$statistic |> round(2)&grave;</code> gets the t-statistic from the results, and rounds it to 2 decimal places, which get's printed out as `r res2[[\"statistic\"]] |> round(2)`. \n  - the bits between the dollar signs, e.g. \\$\\\\alpha\\$ will get printed as mathematical symbols such as $\\alpha$. \n\n\n\n::: {.callout-important collapse=\"true\"}\n#### RMarkdown/Quarto documents are self-contained.\n\nYou need to to put **everything** that is needed to reproduce your analysis **in the correct order**.  \n\nFor instance, if you have used the console (bottom left window) to define an object `peppapig <- 30`, you will have an object in your environment (top right window) called \"peppapig\" which has the value 30.  \n\nIf you were to refer to that object in your RMarkdown document, you will be able to run a line of code such as `peppapig/10` because it will find the \"peppapig\" object in **your** environment. __BUT__ you won't be able to compile the document because it \"starts fresh\" (i.e., compiles within its own environment). In order for it to compile, you would need to *define* what \"peppapig\" is **inside** your document, and **before** the document then refers to it. \n\nThe same applies with using functions in from packages. The RMarkdown document needs to know what packages to load before it uses functions from them. Just because *you* yourself have loaded a package in your session, it does not mean the compilation process for your RMarkdown has access to it. \n\n:::\n\nIf you want some extra explanations on these aspects of RMarkdown, then please see Lessons 0-3 of our [Rmd-bootcamp](https://uoepsy.github.io/scs/rmd-bootcamp/){target=\"_blank\"}.  \n\n`r qbegin(qcounter())`\nCan you create an RMarkdown/Quarto document which:\n\n1. Reads in the [https://uoepsy.github.io/data/TipJoke.csv](https://uoepsy.github.io/data/TipJoke.csv) data.\n2. Conducts and reports a $\\chi^2$ test of independence examining whether telling a joke affect whether or not a waiter in a coffee bar receives a tip from a customer.\n3. Successfully compiles (\"knits\") into an **.html** file. \n\n`r qend()`\n\n<div class=\"divider div-transparent div-dot\"></div>\n\n# Optional Extras\n\n`r qbegin(qlabel = FALSE, \"Optional Extra 1\")`\n> **Research Question:** Do childrens' favourite colours differ from Adults?  \n\n:::frame\nAlong with the 50 children from whom we collected data on their favourite colours, we also had 100 adult participants. You can see the data in @tbl-childadultcols\n\n```{r}\n#| label: tbl-childadultcols\n#| tbl-cap: \"Colour preferences of 50 children aged between 2 and 5, and 50 Adults (aged 18+)\"\n#| echo: false\nset.seed(33)\nchildren = sample(c(\"red\",\"blue\",\"yellow\",\"purple\",\"green\",\"other\"), size = 50, replace = TRUE, \n       prob = c(.25,.20,.2,.15,.10,.1)) |>\n  table() |> as.data.frame() |> rename(colour=Var1, children = Freq) \nadults = sample(c(\"red\",\"blue\",\"yellow\",\"purple\",\"green\",\"other\"), size = 100, replace = TRUE, \n       prob = c(.25,.20,.1,.15,.13,.17)) |>\n  table() |> as.data.frame() |> rename(colour=Var1, adults = Freq)\ngt::gt(cbind(children, adults=adults$adults))\n```\n\nGetting this into R is a little more tricky, so we're giving you the code below: \n```{r}\nas.table(matrix(c(10,6,3,8,8,15,24,11,19,7,24,15), ncol=2))\n```\n:::\n\nConduct an appropriate test to address the research question.  \n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n\n```{r}\nchildadult <- as.table(matrix(c(10,6,3,8,8,15,24,11,19,7,24,15), ncol=2))\n\nchisq.test(childadult)\n```\n\n\n`r solend()`\n\n`r qbegin(qlabel = FALSE, \"Optional Extra 2\")`\nUsing the data from the past surveys: [https://uoepsy.github.io/data/surveydata_historical.csv](https://uoepsy.github.io/data/surveydata_historical.csv).  \n\nIs students' preference for evenings over mornings associated with a pet preference (cats vs dogs)? \n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n\n```{r}\nsurveydata <- read_csv(\"https://uoepsy.github.io/data/surveydata_historical.csv\")\n\nsurveydata |> \n  select(ampm, catdog) |>\n  table() |> print() |>\n  chisq.test()\n```\n\n`r solend()`\n\n\n\n\n\n\n\n\n<div class=\"tocify-extend-page\" data-unique=\"tocify-extend-page\" style=\"height: 0;\"></div>","srcMarkdownNoYaml":"\n\n\n```{r}\n#| label: setup\n#| include: false\nsource('assets/setup.R')\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(xaringanExtra)\nxaringanExtra::use_panelset()\nqcounter <- function(){\n  if(!exists(\"qcounter_i\")){\n    qcounter_i <<- 1\n  }else{\n    qcounter_i <<- qcounter_i + 1\n  }\n  qcounter_i\n}\nset.seed(017)\n```\n\n# Binomials\n\n## Cats n Dogs\n\n> **Research Question:** Is the probability that a student prefers Dogs over Cats greater than 50%?\n\n:::frame\n__Data: Past Surveys__  \nIn the last few years, we have asked students of the statistics courses in the Psychology department to fill out a little survey.  \nAnonymised data are available at [https://uoepsy.github.io/data/surveydata_historical.csv](https://uoepsy.github.io/data/surveydata_historical.csv).  \n\n__Note:__ this does _not_ contain the responses from this year. \n\n```{r}\nsurveydata <- \n  read_csv(\"https://uoepsy.github.io/data/surveydata_historical.csv\")\n```\n:::\n\n\n`r qbegin(qcounter())`\nCalculate the proportion of students who chose cats vs dogs in the survey.\nIf the probability that a student prefers dogs to cats is 50%, what would we _expect_ to see?  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \n`table() |> prop.table()` might be the quickest way here.   \n:::\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n\nI sometimes like adding a `|> print() |>` in the middle of these sequences of pipes to print out the intermediary output as well:  \n```{r}\ntable(surveydata$catdog) |>\n  print() |>\n  prop.table()\n```\n\nIf the probability was 50%, or 0.5, then we would expect the numbers to be equal. We have `r sum(!is.na(surveydata$catdog))` responses here, so we would expect `r sum(!is.na(surveydata$catdog))/2` to be team cats, and `r sum(!is.na(surveydata$catdog))/2` to be team dogs!  \n\n`r solend()`\n\n`r qbegin(qcounter())`\n> **Research Question:** Is the probability that a student prefers Dogs over Cats **greater** than 50%?\n\nConduct a test to address the research question.  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\n- Note the \"tailedness\" of the question. Just like `t.test()`, the function we use here should allow us to specify our hypothesis.  \n- You can see an example of this test in [4A #binomials](04a_chisq.html#binomials){target=\"_blank\"}.   \n\n:::\n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n\nWe're going to want to use the `binom.test()` function. This is just like the reading, where we tested the proportion of our sample who were left-handed.  \n\nWe can either type in the numbers of \"Dog\" people out of our total number:\n```{r}\nbinom.test(317, 539, p = 0.5, alternative = \"greater\")\n```\nOr give the function a table.  \n_BUT_ we need to make sure that it is picking up the right value as \"successes\".  \nNotice that this gives us a different result:\n```{r}\n#| echo: false\ntable(surveydata$catdog) |>\n  binom.test(p = 0.5, alternative = \"greater\")\n```\nThis is because it is taking the first entry as the number of successes. So it is saying that Cat people = 1 and Dog people = 0. But we want it the other way around! You could either create a different table (or switch its order), or simply switch to the alternative being \"less\" (because in this unrealistic binary world, the question \"is the probability of being Dog person >0.5?\" is the same thing as \"is probability of being Cat person <0.5?\")\n\n\n`r solend()`\n\n\n\n\n# Chi-Square Tests\n\n## Birth-Months\n\n> **Research Question:** Are students more likely to be born in certain months than others?  \n\n:::frame\n__Data: Past Surveys__  \nIn the last few years, we have asked students of the statistics courses in the Psychology department to fill out a little survey.  \nAnonymised data are available at [https://uoepsy.github.io/data/surveydata_historical.csv](https://uoepsy.github.io/data/surveydata_historical.csv).  \n\n__Note:__ this does _not_ contain the responses from this year. \n\n```{r}\nsurveydata <- \n  read_csv(\"https://uoepsy.github.io/data/surveydata_historical.csv\")\n```\n:::\n\n\n`r qbegin(qcounter())`\nWhat is your intuition about the distribution of all students' birth-months?  \nDo you think they will be spread uniformly across all months of the year (like a fair 12-sided dice), or do you think people are more likely to be born in certain months more than others?  \n\nPlot the distribution and get an initial idea of how things are looking.  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \nYou can do this quickly with `barplot()` and `table()`, or you could create try using `ggplot()` and looking into `geom_bar()`.  \n:::\n`r qend()`\n\n`r solbegin(show=params$SHOW, toggle=params$TOGGLE)`\nThe quick and dirty way to plot:\n```{r}\nbarplot(table(surveydata$birthmonth))\n```\n\nA ggplot option:\n```{r}\nggplot(data = surveydata, aes(x = birthmonth)) +\n    geom_bar() +\n    labs(x = \"- Birth Month -\")\n```\n`r solend()`\n\n`r qbegin(qcounter())`\nWe're going to perform a statistical test to assess the extent to which our data conforms to the hypothesis that people are no more likely to be born on one month than another.  \n\nUnder this hypothesis, what would be the proportional breakdown of observed births in each of the months?  \n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\nIf people are no more likely to be born in one month than another, then we would expect the same proportion of observed births in each month.  \nThere are 12 months, so we would expect $\\frac{1}{12}$ observations in each month.  \n\nWe can write these as: \n$$\n\\begin{align}\n& p_{jan} = 1/12 \\\\\n& p_{feb} = 1/12 \\\\\n& ... \\\\\n& p_{dec} = 1/12 \\\\\n\\end{align}\n$$\n`r solend()`\n\n`r qbegin(qcounter())`\n\nHow many observations in our sample would we *expect* to find with a birthday in January? And in February? ... and so on?  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\nHow many responses (i.e. not missing values) do we have for this question?  \n\n:::\n\n`r qend()`\n\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\nThere are `r sum(!is.na(surveydata$birthmonth))` people who have non-NA values (`sum(!is.na(surveydata$birthmonth))`).  \n\nUnder the null hypothesis, we would expect $\\frac{1}{12} \\times$ `r sum(!is.na(surveydata$birthmonth))` = `r round(sum(!is.na(surveydata$birthmonth))/12,2)` observations born in each month. \n`r solend()`\n\n`r qbegin(qcounter())`\nThe code below creates counts for each month. Before doing that, it removes the rows which have an NA in them for birthmonth: \n```{r}\n#| eval: false\nsurveydata |>\n  filter(!is.na(birthmonth)) |>\n  group_by(birthmonth) |>\n  summarise(\n      observed = n()\n  )\n```\n(A shortcut for this would be `surveydata |> filter(!is.na(birthmonth)) |> count(birthmonth)`)  \n\nAdd to the code above to create columns showing:\n\n- the expected counts $E_i$\n- observed-expected ($O_i - E_i$)\n- the squared differences $(O_i - E_i)^2$\n- the standardised square differences $\\frac{(O_i - E_i)^2}{E_i}$  \n\nThen calculate the $\\chi^2$ statistic (the sum of the standardised squared differences).  \nIf your observed counts matched the expected counts *perfectly*, what would the $\\chi^2$ statistic be? \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \nThis was all done in the step-by-step example of a $\\chi^2$ test in [4A #chi2-goodness-of-fit-test](04a_chisq.html#chi2-goodness-of-fit-test){target=\"_blank\"}\n:::\n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n```{r}\nchi_table <- \n    surveydata |>\n    filter(!is.na(birthmonth)) |>\n    group_by(birthmonth) |>\n    summarise(\n        observed = n(),\n        expected = sum(!is.na(surveydata$birthmonth))/12,\n        diff = observed-expected,\n        sq_diff = diff^2,\n        std_sq_diff = sq_diff / expected\n    )\nchi_table\n```\n\nAnd we can calculate our $\\chi^2$ test statistic by simply summing the values in the last column we created:\n```{r}\nsum(chi_table$std_sq_diff)\n```\n\nIf all our observed counts are equal to our expected counts, then the `diff` column above will be all $0$, and $0^2=0$, and $\\frac{0}{E_i}$ will be $0$. So $\\chi^2$ will be $0$. \n`r solend()`\n\n`r qbegin(qcounter())`\nYou can see the distribution of $\\chi^2$ statistics with different degrees of freedom below.  \n```{r}\n#| label: fig-chidist\n#| echo: false\n#| fig.cap: \"Chi-Square Distributions\"\nknitr::include_graphics(\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Chi-square_pdf.svg/1200px-Chi-square_pdf.svg.png\")\n```\n\nWe can find out the proportion of the distribution which falls to either side of a given value of $\\chi^2$ using `pchisq()`. We need to give it our calculated $\\chi^2$ statistic, our degrees of freedom (`df`), which is equal to the number of categories minus 1. We also need to specify whether we want the proportion to the left (`lower.tail=TRUE`) or to the right (`lower.tail=FALSE`).  \n\n1. Using `pchisq()`, calculate the probability of observing a $\\chi^2$ statistic as least as extreme as the one we have calculated.  \n2. Check that these results match with those provided by R's built-in function: `chisq.test(table(surveydata$birthmonth))` (the `table` function will ignore NAs by default, so we don't need to do anything extra for this).    \n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n```{r}\nsum(chi_table$std_sq_diff)\npchisq(sum(chi_table$std_sq_diff), df = 11, lower.tail = FALSE)\n```\n\n```{r}\nchisq.test(table(surveydata$birthmonth))\n```\n`r solend()`\n\n`r qbegin(qcounter())`\nWhich months of year had the highest contributions to the chi-square test statistic?  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \nThink about your standardised squared deviations. \n:::\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n**Standardized squared deviations**  \n\nOne possible way to answer this question is to look at the individual contribution of each category to the $\\chi^2$ statistic. We computed these values in an earlier question.  \n```{r}\nchi_table |>\n  select(birthmonth, std_sq_diff)\n```\n\nFrom the barplot we created earlier on, we can see which months make up higher/lower proportions than expected:\n```{r}\nggplot(chi_table, aes(x = birthmonth, y = observed/nrow(surveydata))) +\n  geom_col(fill = 'lightblue') +\n  geom_hline(yintercept = 1/12, color = 'red') +\n  theme_classic(base_size = 15)\n```\n\n**Pearson residuals**\n\nEquivalently, you could answer by looking at Pearson residuals:\n```{r}\nchisq.test(table(surveydata$birthmonth))$residuals\n```\n\n```{r}\n#| echo: false\npresids <- chisq.test(table(surveydata$birthmonth))$residuals\npresids <- presids[order(abs(presids),decreasing = TRUE)]\n```\n\nThe greatest *absolute* values are for `r names(presids)[1]` and `r names(presids)[2]`, showing that for these months the deviations from expected to observed were the greatest. \n\n`r solend()`\n\n## Children's Favourite Colours\n\n> **Research Question:** Do childrens' favourite colours correspond to the those suggested by the internet?  \n\n:::frame\nAccording to one part of the internet, 30% of children have red as their favourite colour, 20% have blue, 15% yellow, 11% purple, 9% green, and 15% prefer some other colour.  \n\nWe collected data from 50 children aged between 2 and 5, and got them to choose one of a set of objects that were identical apart from colour. You can see the data in @tbl-childcols\n\n```{r}\n#| label: tbl-childcols\n#| tbl-cap: \"Colour preferences of 50 children aged between 2 and 5\"\n#| echo: false\nset.seed(33)\nchildren = sample(c(\"red\",\"blue\",\"yellow\",\"purple\",\"green\",\"other\"), size = 50, replace = TRUE, \n       prob = c(.25,.20,.2,.15,.10,.1)) |>\n  table() |> as.data.frame() |> rename(colour=Var1)\ngt::gt(children)\n```\n:::\n\n`r qbegin(qcounter())`\nPerform a $\\chi^2$ goodness of fit test to assess the extent to which our sample of children conform to this theorised distribution of colour preferences.  \n\nNo need to do this manually - once is enough. Just go straight to using the `chisq.test()` function.  \nHowever, we will need to get the numbers into R somehow.. \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \nYou can make a table from scratch using, for example: `as.table(c(1,2,3,4,5))`.  \n\nFor the test, try using `chisq.test(..., p = c(?,?,?,...) )`.  \nWe saw the use of `chisq.test()` in the example goodness of fit test, [4A #chi2-goodness-of-fit-test](04a_chisq.html#chi2-goodness-of-fit-test){target=\"_blank\"}  \n:::\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\nLet's get the data in:  \n```{r}\nchildcols <- as.table(c(10,6,3,8,8,15))\nnames(childcols) <- c(\"blue\",\"green\",\"other\",\"purple\",\"red\",\"yellow\")\nchildcols\n```\nOur theoretical probabilities of different colours must match the order in the table which we give `chisq.test()`. They must also always sum to 1.  \n\n```{r}\n#| warning: true\n#| message: true\nchisq.test(childcols, p = c(.20,.09,.15,.11,.30,.15))\n```\n\nNote, we get a warning here of <span style=\"color:blue\">\"Chi-squared approximation may be incorrect\"</span>. This is because some of the expected cell counts are <5.  \n```{r}\n#| warning: false\n#| message: false\nchisq.test(childcols, \n           p = c(.20,.09,.15,.11,.30,.15))$expected\n```\n\nThere are a couple of options here, but the easiest is to use the functionality of `chisq.test()` that allows us to compute the p-value by using a simulation (similar to the idea we saw in [2B#sampling-&-sampling-distributions](02b_sampling.html#sampling-sampling-distributions){target=\"_blank\"}), rather than by comparing it to a theoretical $\\chi^2$ distribution.  We can do this by using:  \n\n```{r}\nchisq.test(childcols, p = c(.20,.09,.15,.11,.30,.15),\n           simulate.p.value = TRUE)\n```\n\n`r solend()`\n\n`r qbegin(qcounter())`\nWhat are the *observed* proportions of children who prefer each colour?  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\nLook up the `prop.table()` function?  \n\n:::\n\n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\nFrom the help documentation (`?prop.table()`), we see that we can pass `prop.table()` the argument `x`, which needs to be a table. \n```{r}\nprop.table(childcols)*100\n```\n\n```{r}\nbarplot(prop.table(childcols)*100)\n```\n`r solend()`\n\n<div class=\"divider div-transparent div-dot\"></div>\n\n## Jokes and Tips\n\n:::frame\n__Data: TipJokes__  \n\n> **Research Question:** Can telling a joke affect whether or not a waiter in a coffee bar receives a tip from a customer?  \n\nA [study](https://doi.org/10.1111/j.1559-1816.2002.tb00266.x) published in the Journal of Applied Social Psychology^[Gueaguen, N. (2002). The Effects of a Joke on Tipping When It Is Delivered at the Same Time as the Bill. _Journal of Applied Social Psychology, 32_(9), 1955-1963.] investigated this question at a coffee bar of a famous seaside resort on the west Atlantic coast of France. \nThe waiter randomly assigned coffee-ordering customers to one of three groups. \nWhen receiving the bill, one group also received a card telling a joke, another group received a card containing an advertisement for a local restaurant, and a third group received no card at all. \n\nThe data are available at https://uoepsy.github.io/data/TipJoke.csv.  \nThe dataset contains the variables:\n\n- `Card`: None, Joke, Ad.\n- `Tip`: 1 = The customer left a tip, 0 = The customer did not leave tip. \n\n:::\n\n\n`r qbegin(qcounter())`\nProduce a plot and a table to display the relationship between whether or not the customer left a tip, and what (if any) card they received alongside the bill.  \n\nDon't worry about making it all pretty. Mosaic plots in R are a bit difficult. \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \n`plot(table(...))` will give you something. You can see one in the example $\\chi^2$ test of independence,[4A #chi2-test-of-independence](04a_chisq.html#chi2-test-of-independence){target=\"_blank\"}.  \n:::\n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n```{r}\ntipjoke <- read_csv('https://uoepsy.github.io/data/TipJoke.csv')\n\ntable(tipjoke$Card, tipjoke$Tip)\n\nplot(table(tipjoke$Card, tipjoke$Tip))\n```\n`r solend()`\n\n`r qbegin(qcounter())`\nWhat would you *expect* the cell counts to look like if there were no relationship between what the waiter left and whether or not the customer tipped?  \n\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\nThink about what proportion of customers tipped. \nThen work out how many customers got each type of card. If there were no relationship, then the proportions would be the same in each group. \n\n:::\n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\nIn total, 60 customers tipped (14+30+16), and 151 did not. So *overall*, 0.28 ($\\frac{60}{(60+151)}$) of customers tip.  \n\n74 customers got an Ad card, 72 customers got a Joke, and 65 got None. If this were independent of whether or not they left a tip, we would expect equal proportions of tippers in each group.  \nSo we would expect 0.28 of each group to leave a tip.  \n\n::: {.callout-caution collapse=\"true\"}\n#### some calculations\n\nYou can think about observed vs expected by looking at the two-way table along with the marginal row and column totals given:   \n```{r}\n#| echo: false\ntable(tipjoke$Card, tipjoke$Tip) %>%\n  rbind(colSums(.)) %>%\n  cbind(rowSums(.)) -> conttable\nconttable[1:3,1:2]<-\"  \"\nconttable |> knitr::kable() |>\n  kableExtra::kable_styling()\n```\nFor a given cell of the table we can calculate the expected count as $\\text{row total} \\times \\frac{\\text{column total}}{\\text{samplesize}}$:\n\n**Expected:**\n```{r}\n#| echo: false\ntable(tipjoke$Card, tipjoke$Tip) %>%\n  rbind(colSums(.)) %>%\n  cbind(rowSums(.)) -> conttable\nconttable[1:3,1]<-round(conttable[1:3,3]*(conttable[4,1])/conttable[4,3],2)\nconttable[1:3,2]<-round(conttable[1:3,3]*(conttable[4,2])/conttable[4,3],2)\nconttable |> knitr::kable() |>\n  kableExtra::kable_styling()\n```\n\n\nIf you're wondering how we do this in R.. \nhere's our table:  \n```{r}\nt <- tipjoke |>\n  select(Card, Tip) |> table()\nt\n```\nHere are the row totals:  \n```{r}\nrowSums(t)\n```\nand column totals divided by total:\n```{r}\ncolSums(t) / sum(t)\n```\n\nthere's a complicated bit of code using `%o%` which could do this for us. You don't need to remember %o%, it's very rarely used): \n```{r}\ne <- rowSums(t) %o% colSums(t) / sum(t)\ne\n```\n\nOr, alternatively, do it one by one:  \n```{r}\nrowSums(t) * (colSums(t) / sum(t))[1]\nrowSums(t) * (colSums(t) / sum(t))[2]\n```\n\n:::\n\n`r solend()`\n\n`r qbegin(qcounter())`\nJust like we gave the `chisq.test()` function a table of observed frequencies when we conducted a goodness of fit test in earlier exercises, we can give it a two-way table of observed frequencies to conduct a test of independence.  \n\nTry it now.  \n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n```{r}\nchisq.test(table(tipjoke$Card, tipjoke$Tip))\n```\n`r solend()`\n\n\n<div class=\"divider div-transparent div-dot\"></div>\n\n# Some RMarkdown/Quarto\n\n```{r}\n#| include: false\npass_scores <- read_csv(\"https://uoepsy.github.io/data/pass_scores.csv\")\nres2<-t.test(pass_scores$PASS, mu = 33, alternative = \"less\")\n```\n\n\nUsing one of the $t$-tests we saw in the previous week's exercises, we can use an RMarkdown document in which we write our results so that they get compiled to look nice and pretty:  \n\n::: {.panelset}\n\n::: {.panel}\n#### Writing this\n\n```{r echo=FALSE, out.width=\"1000px\"}\nknitr::include_graphics(\"images/hypothesis/rmarkdownbacktick.png\")\n```\n\n:::\n::: {.panel}\n#### Compiles to this\n\n:::frame\n\nA one-sided one-sample t-test was conducted in order to determine if the average score on the Procrastination Assessment Scale for Students (PASS) for a sample of `r nrow(pass_scores)` students at Edinburgh University was significantly lower ($\\alpha = .05$) than the average score obtained during development of the PASS. \n\nEdinburgh University students scored lower (Mean = `r round(mean(pass_scores$PASS),2)`, SD = `r round(sd(pass_scores$PASS), 2)`) than the score reported by the authors of the PASS (Mean = 33). This difference was statistically significant (t(`r nrow(pass_scores)-1`)=`r round(res2$statistic, 2)`, p < .05, one-tailed).  \n\n\n:::\n\n:::\n\n:::\n\nThis is one of the huge benefits of RMarkdown (and \"Quarto\" which is basically RMarkdown v2!). Imagine we collected more data - we wouldn't have to edit all the results, we could simply recompile and they would update for us!  \nNote how it works:  \n\n  - the code chunk saves the results of the `t.test()` function as a named object `res2`.\n  - in text, the backticks <code>&grave;r ... ... ... &grave;</code> are used to execute small bits of R code, and include the output within the text. For instance, the line <code>&grave;r res2\\$statistic |> round(2)&grave;</code> gets the t-statistic from the results, and rounds it to 2 decimal places, which get's printed out as `r res2[[\"statistic\"]] |> round(2)`. \n  - the bits between the dollar signs, e.g. \\$\\\\alpha\\$ will get printed as mathematical symbols such as $\\alpha$. \n\n\n\n::: {.callout-important collapse=\"true\"}\n#### RMarkdown/Quarto documents are self-contained.\n\nYou need to to put **everything** that is needed to reproduce your analysis **in the correct order**.  \n\nFor instance, if you have used the console (bottom left window) to define an object `peppapig <- 30`, you will have an object in your environment (top right window) called \"peppapig\" which has the value 30.  \n\nIf you were to refer to that object in your RMarkdown document, you will be able to run a line of code such as `peppapig/10` because it will find the \"peppapig\" object in **your** environment. __BUT__ you won't be able to compile the document because it \"starts fresh\" (i.e., compiles within its own environment). In order for it to compile, you would need to *define* what \"peppapig\" is **inside** your document, and **before** the document then refers to it. \n\nThe same applies with using functions in from packages. The RMarkdown document needs to know what packages to load before it uses functions from them. Just because *you* yourself have loaded a package in your session, it does not mean the compilation process for your RMarkdown has access to it. \n\n:::\n\nIf you want some extra explanations on these aspects of RMarkdown, then please see Lessons 0-3 of our [Rmd-bootcamp](https://uoepsy.github.io/scs/rmd-bootcamp/){target=\"_blank\"}.  \n\n`r qbegin(qcounter())`\nCan you create an RMarkdown/Quarto document which:\n\n1. Reads in the [https://uoepsy.github.io/data/TipJoke.csv](https://uoepsy.github.io/data/TipJoke.csv) data.\n2. Conducts and reports a $\\chi^2$ test of independence examining whether telling a joke affect whether or not a waiter in a coffee bar receives a tip from a customer.\n3. Successfully compiles (\"knits\") into an **.html** file. \n\n`r qend()`\n\n<div class=\"divider div-transparent div-dot\"></div>\n\n# Optional Extras\n\n`r qbegin(qlabel = FALSE, \"Optional Extra 1\")`\n> **Research Question:** Do childrens' favourite colours differ from Adults?  \n\n:::frame\nAlong with the 50 children from whom we collected data on their favourite colours, we also had 100 adult participants. You can see the data in @tbl-childadultcols\n\n```{r}\n#| label: tbl-childadultcols\n#| tbl-cap: \"Colour preferences of 50 children aged between 2 and 5, and 50 Adults (aged 18+)\"\n#| echo: false\nset.seed(33)\nchildren = sample(c(\"red\",\"blue\",\"yellow\",\"purple\",\"green\",\"other\"), size = 50, replace = TRUE, \n       prob = c(.25,.20,.2,.15,.10,.1)) |>\n  table() |> as.data.frame() |> rename(colour=Var1, children = Freq) \nadults = sample(c(\"red\",\"blue\",\"yellow\",\"purple\",\"green\",\"other\"), size = 100, replace = TRUE, \n       prob = c(.25,.20,.1,.15,.13,.17)) |>\n  table() |> as.data.frame() |> rename(colour=Var1, adults = Freq)\ngt::gt(cbind(children, adults=adults$adults))\n```\n\nGetting this into R is a little more tricky, so we're giving you the code below: \n```{r}\nas.table(matrix(c(10,6,3,8,8,15,24,11,19,7,24,15), ncol=2))\n```\n:::\n\nConduct an appropriate test to address the research question.  \n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n\n```{r}\nchildadult <- as.table(matrix(c(10,6,3,8,8,15,24,11,19,7,24,15), ncol=2))\n\nchisq.test(childadult)\n```\n\n\n`r solend()`\n\n`r qbegin(qlabel = FALSE, \"Optional Extra 2\")`\nUsing the data from the past surveys: [https://uoepsy.github.io/data/surveydata_historical.csv](https://uoepsy.github.io/data/surveydata_historical.csv).  \n\nIs students' preference for evenings over mornings associated with a pet preference (cats vs dogs)? \n\n`r qend()`\n`r solbegin(show=params$SHOW_SOLS, toggle=params$TOGGLE)`\n\n```{r}\nsurveydata <- read_csv(\"https://uoepsy.github.io/data/surveydata_historical.csv\")\n\nsurveydata |> \n  select(ampm, catdog) |>\n  table() |> print() |>\n  chisq.test()\n```\n\n`r solend()`\n\n\n\n\n\n\n\n\n<div class=\"tocify-extend-page\" data-unique=\"tocify-extend-page\" style=\"height: 0;\"></div>"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"include-in-header":["assets/toggling.html",{"text":"<link rel=\"stylesheet\" href=\"https://uoepsy.github.io/assets/css/ccfooter.css\" />\n"}],"number-sections":false,"output-file":"04_ex.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","toc_float":true,"code-annotations":"hover","link-citations":true,"theme":["united","assets/style-labs.scss"],"title":"Exercises: Binomial & Chi-Square Tests","params":{"SHOW_SOLS":false,"TOGGLE":true},"editor_options":{"chunk_output_type":"console"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}