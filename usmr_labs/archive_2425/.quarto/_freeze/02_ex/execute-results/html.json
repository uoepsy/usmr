{
  "hash": "a8f92333e8f2e64e0d2a42adf9c00806",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exercises: More R; Estimates & Intervals\"\nparams: \n    SHOW_SOLS: FALSE\n    TOGGLE: TRUE\n---\n\n\n\n\n\n\n\n\n\n<div class='question-begin'>Question 0</div><div class='question-body'>\n\n\nNow that you've had a little bit of playing around in R, we're going to ask you to change some of RStudio's global settings.  \n\nThere was a section in reading [01A #useful-settings](01a_R.html#useful-settings){target=\"_blank\"} that showed a couple of settings that are very useful. Please change these now.  \n\nWhile you're at it - pick your favourite colour scheme for RStudio and change that too!\n\nIt might also be useful to find a font which differentiates 1 from l, and 0 from O.  \n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n\n# Data manipulation & visualisation\n\n:::frame\n__Data: Past Surveys__  \nIn the last few years, we have asked students of the statistics courses in the Psychology department to fill out a little survey.  \nAnonymised data are available at [https://uoepsy.github.io/data/surveydata_historical.csv](https://uoepsy.github.io/data/surveydata_historical.csv).  \n\n__Note:__ this does _not_ contain the responses from this year. \n:::\n\n\n\n\n<div class='question-begin'>Question 1</div><div class='question-body'>\n\n\nRead in the data, giving it a name to store it in your environment.  \n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div style=\"display:none;\">\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nsurveydata <- read_csv(\"https://uoepsy.github.io/data/surveydata_historical.csv\")\n```\n:::\n\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n\n<div class='question-begin'>Question 2</div><div class='question-body'>\n\n\nHow many previous **USMR** students are born in the same month as you? \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints   \n\n- The data contains students from some of the other statistics courses we teach, so this will involve `filter`ing your data to USMR students first. \n- In tidyverse you can make a table using `... |> select(variable) |> table()`  \n- You can also try `... |> count(variable)` to get the same information.  \n\n:::\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div style=\"display:none;\">\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsurveydata |> \n  filter(course == \"usmr\") |>\n  count(birthmonth)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 2\n   birthmonth     n\n   <chr>      <int>\n 1 apr           26\n 2 aug           20\n 3 dec           21\n 4 feb           18\n 5 jan           21\n 6 jul           28\n 7 jun           32\n 8 mar           28\n 9 may           29\n10 nov           29\n11 oct           29\n12 sep           26\n13 <NA>           1\n```\n\n\n:::\n:::\n\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 3</div><div class='question-body'>\n\n\nCreate a new variable in the dataset which indicates whether people were taller than 6 foot (182cm).\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \nYou might want to use `mutate()`. Remember to make the changes apply to the objects in your environment, rather than just printing it out.  \n`data <- data |> mutate(...)`  \n(see [2A #advances-in-r](02a_measurement.html#advances-in-r){target=\"_blank\"})\n\n:::\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div style=\"display:none;\">\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsurveydata <- surveydata |>\n  mutate(\n    over6ft = height > 182\n  )\n```\n:::\n\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 4</div><div class='question-body'>\n\n\nWhat percentage of respondents to the survey (for whom we have data on their height) are greater than 6 foot tall?\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \n\n- Try `table()`, and then think about how we can convert the counts to percentages (what does `sum()` of the table give you?).  \n  - `table()` will actually by default count only those values which _aren't_ missing, so this means you don't have to do anything extra here (if you wanted it to also count the missing values, we can use `table(data$variable, useNA = \"ifany\")`)\n- See also [2A #categorical](02a_measurement.html#categorical){target=\"_blank\"}.  \n\n:::\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div style=\"display:none;\">\n\n\nWe can divide the table by the `sum` of the table\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntable(surveydata$over6ft) / sum(table(surveydata$over6ft))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n     FALSE       TRUE \n0.95903166 0.04096834 \n```\n\n\n:::\n:::\n\n\n\nWe can also use `prop.table()`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nprop.table(table(surveydata$over6ft))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n     FALSE       TRUE \n0.95903166 0.04096834 \n```\n\n\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 5</div><div class='question-body'>\n\n\nCalculate the mean and standard deviation of heights of all respondents to the survey.  \n\nCan you also do this using the tidyverse syntax?\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \n\n- We can do it with `mean(data$variable)`, but it will be useful to practice tidyverse style. You'll probably want to `summarise()` the data.  \n- We're likely to have missing data in here, so `na.rm=TRUE` will be handy (see [2A #numeric](02a_measurement.html#numeric){target=\"_blank\"})\n\n:::\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div style=\"display:none;\">\n\n\nThis returns us NA:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmean(surveydata$height)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] NA\n```\n\n\n:::\n:::\n\n\n\nSo we need to make sure we use `na.rm = TRUE` (we can use `T` as a shorthand for `TRUE`).  \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmean(surveydata$height, na.rm = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 167.7519\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(surveydata$height, na.rm = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8.270978\n```\n\n\n:::\n:::\n\n\n\n\nor in tidyverse:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsurveydata |> \n  summarise(\n    meanheight = mean(height, na.rm = T),\n    sdheight = sd(height, na.rm = T)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  meanheight sdheight\n       <dbl>    <dbl>\n1       168.     8.27\n```\n\n\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 6</div><div class='question-body'>\n\n\nPlot the distribution of heights of all respondents. \nTry to make it 'publication ready'.  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \nif we want a histogram, then `hist()` won't cut it here, we're going to want to use **ggplot** to make a lovely pretty histogram, (ggplot was introduced in [2A #ggplot](02a_measurement.html#ggplot){target=\"_blank\"}).  \n:::\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div style=\"display:none;\">\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(surveydata, aes(x=height)) + \n  geom_histogram(binwidth = 5) + \n  labs(x = \"Height (cm)\", \n       y = \"Frequency\", \n       title = \"Heights of respondents to the survey\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](02_ex_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n\n<div class='question-begin'>Question 7</div><div class='question-body'>\n\n\nFor respondents _from each of the different courses_, calculate the mean and standard deviation of heights.  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints   \nThis is just like when we did it for all the respondents - we want to `summarise` our data.   Only this time we need to `group_by` something else first.   \n:::\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div style=\"display:none;\">\n\n\nWe're using the same code as we did before, but we've added in one new line using `group_by()`.  \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsurveydata |> \n  group_by(course) |>\n  summarise(\n    meanheight = mean(height, na.rm = T),\n    sdheight = sd(height, na.rm = T)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 3\n  course meanheight sdheight\n  <chr>       <dbl>    <dbl>\n1 dapr1        168.     7.36\n2 dapr2        167.     7.79\n3 rms2         167.     7.98\n4 usmr         168.     8.75\n```\n\n\n:::\n:::\n\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 8</div><div class='question-body'>\n\n\nBased on your answer to the previous question, can you picture what the distributions are going to look like?  \n\nPlot the distributions of heights for each course to see if you're correct.  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \nTry looking up the documentation for `?facet_wrap`. It is an incredibly useful extension of ggplot which allows you to create the same plot for different groups.  \n\nYou might also want to add an extra `aesthetic` mapping from the `course` variable to some feature of your plot (e.g. 'colour' or 'fill').  \n:::\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div style=\"display:none;\">\n\n\n\nThey're all going to look pretty similar - the center will be at around 167 and the majority of the distribution will lie within about 15cm either side (2 times the standard deviation of about 7.5).  \nNote that the USMR students have a very very slightly higher mean as well as a slightly bigger standard deviation. So this plot will be slightly shifted to the right, and will be slightly more spread out. It might be hard to see these differences just by looking at the plots though.  \n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(surveydata, aes(x=height, fill = course)) + \n  geom_histogram(binwidth = 5) + \n  facet_wrap(~course) + \n  labs(x = \"Height (cm)\", \n       y = \"Frequency\", \n       title = \"Heights of respondents to the survey\") + \n  guides(fill = \"none\") + \n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](02_ex_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 9</div><div class='question-body'>\n\n\n\nHow many people in the survey do we have height data for? (i.e. how many are not missing?)   \nTo find this out we might need to use `is.na()` (see below for a little example for you to play with).  \n\n::: {.callout-note collapse=\"true\"}\n#### `is.na()`  \n\nThe `is.na(x)` function is a bit like asking `x == NA`. It is necessary because NA is a special thing in R, which means we can't ask questions like `3 == NA` (because we don't know what that `NA` is - it _could_ be 3 for all we know!).  \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmynumbers <- c(1,5,NA,3,6,NA)\nmynumbers == 5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE  TRUE    NA FALSE FALSE    NA\n```\n\n\n:::\n\n```{.r .cell-code}\nmynumbers == NA\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] NA NA NA NA NA NA\n```\n\n\n:::\n:::\n\n\n\n\nInstead, we can use `is.na()` to ask \"is this thing an NA?\"  \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# for each number, TRUE if it's an NA, otherwise FALSE\nis.na(mynumbers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE FALSE  TRUE FALSE FALSE  TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\n# ! means \"not\", so this is asking if each number is \"not\" an NA\n!is.na(mynumbers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  TRUE  TRUE FALSE  TRUE  TRUE FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\n# how many non-NAs are there? \nsum(!is.na(mynumbers))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div style=\"display:none;\">\n\n\n\nTo get the number of respondents with height data, we can sum the non-NA values:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsum(!is.na(surveydata$height))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 537\n```\n\n\n:::\n:::\n\n\n\nand we have this many missing:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsum(is.na(surveydata$height))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 11\n```\n\n\n:::\n:::\n\n\n\nwhich makes sense because we have this many entries in the data:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nnrow(surveydata)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 548\n```\n\n\n:::\n:::\n\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 10</div><div class='question-body'>\n\n\n\nJust like finding out how many people were over 6 foot, we can quickly work out how many respondents are taller than *\\<insert your height here\\>*, by using `table()`.  \nFor instance, here is a table of how many people are taller than me (Josiah):  \n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntable(surveydata$height > 177)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFALSE  TRUE \n  469    68 \n```\n\n\n:::\n:::\n\n\n\n\nHowever, as a learning exercise, let's make sure we can recreate these numbers by doing the calculations manually.  \n\n__Without__ using `table()` or `prop.table()`, find out:  \n\na) How many respondents are taller than you?  \nb) What proportion of respondents (with valid height data) are taller than you?  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \n\n- Remember that we can `sum()` a condition as a quick way of counting: `sum(data$variable == \"thing\")` adds up all the TRUE responses.  \n  - We're going to need to make sure we tell `sum()` to ignore the missing values (`na.rm=TRUE` will come in handy again).  \n- Our denominator (bit on the bottom) for calculating the proportion $\\frac{\\text{nr people taller than me}}{\\text{total nr of people}}$, is the total number of people _for whom we have height data_. We just calculated that in the previous question!   \n- Can you also do this in tidyverse syntax? (most of it can be done inside `summarise()`).  \n  \n\n:::\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div style=\"display:none;\">\n\n\n\nThere are this _many_ people who are taller than me. \nWe need to ignore the NAs again:  \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsum(surveydata$height > 177, na.rm = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 68\n```\n\n\n:::\n:::\n\n\n\n\nTo get the total number of respondents with height data, we can sum the non-NA values:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsum(!is.na(surveydata$height))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 537\n```\n\n\n:::\n:::\n\n\n\n\nAnd if we divide the number who are taller than me by the total number of respondents, we get the proportion:  \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsum(surveydata$height > 177, na.rm = T) / sum(!is.na(surveydata$height))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1266294\n```\n\n\n:::\n:::\n\n\n\n\nWe can do all this inside tidyverse too! \n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsurveydata |> \n  summarise(\n    n_taller = sum(height > 177, na.rm = T),\n    n_heights = sum(!is.na(height)),\n    prop_taller = n_taller / n_heights\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n  n_taller n_heights prop_taller\n     <int>     <int>       <dbl>\n1       68       537       0.127\n```\n\n\n:::\n:::\n\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n<div class=\"divider div-transparent div-dot\"></div>\n\n# Estimates & Intervals\n\nFor these next exercises we are going to be focusing on self-perceived sleep quality ratings. Our survey contains a set of respondents who completed the question below. We're going to use this sample to get an estimate of the sleep quality rating in the wider population.   \n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/sleepquestion.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n\n\n<div class='question-begin'>Question 11</div><div class='question-body'>\n\n\nWe only asked the sleep quality rating question to students in USMR since 2022, so to make things easier, let's create a subset of the dataset which includes only those students from 2022 onwards. \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \nThis will need some `filter`ing, and assigning (e.g. `usmr2022 <-`) to a new name.\n:::\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div style=\"display:none;\">\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusmr2022 <- surveydata |> \n  filter(course == \"usmr\", year >= 2022)\ndim(usmr2022)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 155  25\n```\n\n\n:::\n:::\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n\n<div class='question-begin'>Question 12</div><div class='question-body'>\n\n\nFor the USMR students in the 2022+ academic cohorts, calculate the following: \n\n- mean Sleep-Quality rating\n- standard deviation of Sleep-Quality ratings\n- number of respondents who completed Sleep-Quality rating\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \nYou can do this with things like `mean(data$variable)`, or you can do it all in tidyverse (see the example of `summarise` in the intro to tidyverse: [2A #advances-in-r](02a_measurement.html#advances-in-r){target=\"_blank\"}).  \n\n\n:::\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div style=\"display:none;\">\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusmr2022 |> \n  summarise(\n    m_sleep = mean(sleeprating, na.rm = TRUE),\n    sd_sleep = sd(sleeprating, na.rm = TRUE),\n    n_sleep = sum(!is.na(sleeprating)), \n    n_total = n() # n() will give the total count\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  m_sleep sd_sleep n_sleep n_total\n    <dbl>    <dbl>   <int>   <int>\n1    65.1     23.2     153     155\n```\n\n\n:::\n:::\n\n\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n<div class='question-begin'>Question 13</div><div class='question-body'>\n\n\nUsing your answers to the previous question, construct a 95% confidence interval for the average Sleep-Quality rating.  \nWhy might it be a _bad_ idea to use this as an estimate of the average Sleep-Quality  rating of the global population?  \n\n::: {.callout-tip collapse=\"true\"}\n#### Hints  \n\n- The previous question gives you all the pieces that you need. You'll just need to put them together in the way seen in [2B #confidence-intervals](02b_sampling.html#confidence-intervals){target=\"_blank\"}.  \n- Think about who makes up the sample (e.g. USMR students). Are they _representative_ of the population we are trying to generalise to?  \n\n:::\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div style=\"display:none;\">\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\nSo we have our estimate, which is the mean sleep quality rating in our sample: $\\bar x = 65.14$. And we have a standard deviation of our sleep quality ratings: $s = 23.21$. While our sample has 155 students in it, only 153 responded to the sleep question, so really our $n$ for this calculation is 153.  \n\nWe can calculate our standard error as $SE = \\frac{s}{\\sqrt{n}}$, which is $\\frac{23.21}{\\sqrt{153}} = 1.88$.\n\nThis tells us that _if_ we were to collect lots of samples of size 153, we would expect their mean sleep quality ratings to be normally distributed around 65.14 with a standard deviation of 1.88. So we can expect that 95% of the samples we _could_ take would have means between $1.96 \\times 1.88$ above and below 65.14. Those are our confidence intervals!  \n\n$$\n\\begin{align}\n\\text{Mean = }& 65.14 \\\\\n\\text{95\\% CI = }& 65.14 \\pm 1.96 \\times 1.88 \\\\\n&[61.46, 68.82]\n\\end{align}\n$$\n\nHow well does our sample represent the global population? Well, for one thing, they're all university students, and while there will be many students from across the globe, it's highly likely that our sample is biased towards certain countries or continents. Additionally, we're going to have a lot of people in our sample in a fairly narrow age range. It might be that sleep quality changes a lot as people age, in which case our results are probably not going to generalise very well to, for instance, people who are 70 years old. It's also important to remember that this is a snapshot taken at a certain point in time, and might not generalise to other times. There are lots more ways in which our sample might be biased - you can find a nice little 1 page article at [https://www.nature.com/articles/466029a](https://www.nature.com/articles/466029a){target=\"_blank\"} to get you thinking.  \n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n## Optional Extras  \n\n\n<div class='question-begin'>Optional Extra</div><div class='question-body'>\n\n\nNote that the confidence interval from the previous question is concerned with describing the abstract and _theoretical_ distribution of \"what the mean sleep quality rating would look like from all possible samples of this size that I _could_ take\". In order to do this we used a formula to describe the spread of this distribution, and in doing so had to assume that the standard deviation of our sample is a good approximation of the standard deviation of the population, and that the population is normally distributed.  \n\nWe can also avoid ever using the standard deviation of our sample (`sd(usmr2022$sleeprating)`), and instead approximate the sampling distribution of the mean by \"bootstrapping\" - taking repeated _resamples_ with replacement from the original sample (see [2B#standard-error](02b_sampling.html#standard-error-in-practice){target=\"_blank\"}.  \n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbootstrap_means <- replicate(1000, mean(sample(observed_sample, replace = TRUE)))\n```\n:::\n\n\n\n\n1. Create an object that contains the 10,000 means from 10,000 resamples of our sleep ratings.  \n2. The distribution of resample means is the 'bootstrap distribution'. Plot a histogram of it. What is the standard deviation? How does it compare to the standard error you calculated in the previous question with the formula?  \n3. At what values does the middle 95% of the bootstrap distribution fall?  \n\n\n::: {.callout-tip collapse=\"true\"}\n#### Hints\n\nFor 3, look up `quantile()`. We saw this in [2B #confidence-intervals](02b_sampling.html#confidence-intervals){target=\"_blank\"}.  \n\n:::\n\n\n\n\n</div><p class=\"question-end\"></p>\n\n\n\n\n<div style=\"display:none;\">\n\n\n\n:::panelset\n:::panel\n#### Resample means  \n\nHere is our sample of sleep ratings: \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsleeprates <- usmr2022$sleeprating\n```\n:::\n\n\n\nAnd we can get rid of the NA's: \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsleeprates <- sleeprates[!is.na(sleeprates)]\n```\n:::\n\n\n\n\nWe can resample with replacement from this set of numbers by using the `replace = TRUE` argument in the `sample()` function.  \nNote, we're leaving `size = ` blank, which means it will stop at the same length as the original vector we give it. \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsample(sleeprates, replace = TRUE)\n```\n:::\n\n\n\nand the mean of a given resample is calculated by wrapping `mean()` around the above code: \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmean(sample(sleeprates, replace = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 65.4183\n```\n\n\n:::\n:::\n\n\n\n\nfinally, we'll do it lots and lots of times, using `replicate()`: \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nBSmeans <- replicate(10000, mean(sample(sleeprates, replace = TRUE)))\n```\n:::\n\n\n\n\n:::\n:::panel\n#### Bootstrap Distribution\n\nHere's the histogram of the bootstrap distribution:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhist(BSmeans)\n```\n\n::: {.cell-output-display}\n![](02_ex_files/figure-html/unnamed-chunk-32-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\nAnd here's the standard deviation of that distribution. This is a bootstrapped estimate of the standard error.  \n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsd(BSmeans)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.88583\n```\n\n\n:::\n:::\n\n\n\n\nRecall our standard error calculated using $\\frac{s}{\\sqrt{n}}$ from the previous question was 1.88\n\n:::\n:::panel\n#### Percentiles\n\nWe can get the 2.5% and 97.5% percentiles (i.e. getting the middle 95%), using the code below. Recall our confidence intervals that we computed analytically were 61.46 and 68.82.  \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nquantile(BSmeans, c(.025,.975))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    2.5%    97.5% \n61.44444 68.79739 \n```\n\n\n:::\n:::\n\n\n\n\n:::\n:::\n\n<br><br>\n\n::: {.callout-caution collapse=\"true\"}\n#### bootstraps\n\nBootstrapping is a great way to learn about sampling variability because it allows us to actually plot, summarise and describe what would otherwise be an abstract conceptual distribution.  \n\nIt can also be a useful tool in practice, but it doesn't come without its own problems/complexities. One important thing to note is that it often works _worse_ than traditional methods for small samples, especially skewed samples (i.e. bootstrapping a \"95% CI\" for a small sample will often be too narrow and <95%).  \n\n:::\n\n\n\n\n</div><p class=\"solution-end\"></p>\n\n\n\n\n\n",
    "supporting": [
      "02_ex_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/panelset-0.3.0/panelset.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/panelset-0.3.0/panelset.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}