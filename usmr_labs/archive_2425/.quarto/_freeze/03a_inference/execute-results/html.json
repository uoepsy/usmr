{
  "hash": "b7229bc2e0a6e2247e2cddecc9ea006f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"3A: Foundations of Inference\"\nlink-citations: true\nparams: \n    SHOW_SOLS: TRUE\n    TOGGLE: TRUE\n---\n\n\n\n\n\n\n:::lo\nThis reading:  \n\n- How do we quantify uncertainty due to sampling?  \n- How can we make decisions (what to believe/how to act, etc) that take uncertainty into account?  \n- How likely are we to make the wrong decision?  \n\n:::\n\nWe use statistics primarily to estimate parameters in a population. Whether we are polling people to make predictions about the proportion of people who will vote for a certain party in the next election, or conducting a medical trial and assessing the change in blood pressure for patients given drug X vs those given a placebo in order to decide whether to put the drug into circulation in health service. \n\nWe have seen this already last week:\nWe _observed_ a sample of peoples' life satisfaction ratings (scale 0-100), and we wanted to use these to make some statement about the wider population, such as \"the average life-satisfaction rating is ?? out of 100\". So we use the mean of our sample, as an _estimate_ of the mean of the population.     \n\n# Uncertainty due to sampling\n\nA sample estimate is not going to be spot-on. By taking measurements on only a subset of the population that we are interested in, we introduce sampling variability - we have uncertainty in the accuracy of our estimate. \nWe saw [previously (2B)](02b_sampling.html) how to make a __confidence interval__ as a means of capturing this uncertainty, providing a range of plausible values. \n\nLet's look at this with a different example.\n\n:::frame\n__Stroop Data__ \n\nThe data we are going to use here come from an experiment using one of the best known tasks in psychology, the \"Stroop task\".  \n\nIn our dataset, we have information from 131 participants who completed an online task in which they saw two sets of coloured words. Participants spoke out loud the colour of each word, and timed how long it took to complete each set. In the one set of words, the words _matched_ the colours they were presented in (e.g., word \"blue\" was coloured blue). In the other set of words, the words _mismatched_ the colours (e.g., the word \"blue\" was coloured red (see @fig-stroop1). The order of matching/mismatching sets was randomly allocated for each participant. Participants' recorded their times for each set (*matching* and *mismatching*).^[You can try out the experiment at https://faculty.washington.edu/chudler/java/ready.html]      \n\nThe data are available at [https://uoepsy.github.io/data/stroop.csv](https://uoepsy.github.io/data/stroop.csv).  \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Stroop Task - Color word interference. Images from https://faculty.washington.edu/chudler/java/ready.html](images/numeric/stroop1.png){#fig-stroop1 fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n:::\n\nFirst, we read in the data and take a look at it. We should note how many rows (130), how many columns (4), and so on.  \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nstroopdata <- read_csv(\"https://uoepsy.github.io/data/stroop.csv\")\nhead(stroopdata)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n     id   age matching mismatching\n  <dbl> <dbl>    <dbl>       <dbl>\n1     1    41     22.3        16.9\n2     2    24     22.3        19.1\n3     3    40     15.4        13.6\n4     4    46      9.9        15.0\n5     5    36     14.2        16.4\n6     6    29     19.9        18.0\n```\n\n\n:::\n:::\n\n\n\n\nWhat we are interested in is the differences between the matching and mismatching times. For someone who took 10 seconds for the matching set, and 30 seconds for the mismatching set, we want to record their score as a difference of 20 seconds.   \n\nSo we can add this as a new variable to our data: \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nstroopdata <- \n  stroopdata |> \n  mutate(\n    diff = mismatching - matching\n  )\nhead(stroopdata) # take a look to check it works\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 5\n     id   age matching mismatching  diff\n  <dbl> <dbl>    <dbl>       <dbl> <dbl>\n1     1    41     22.3        16.9 -5.4 \n2     2    24     22.3        19.1 -3.2 \n3     3    40     15.4        13.6 -1.81\n4     4    46      9.9        15.0  5.14\n5     5    36     14.2        16.4  2.18\n6     6    29     19.9        18.0 -1.90\n```\n\n\n:::\n:::\n\n\n\n\nWhat we're interested in is the distribution of these difference-scores. Are people, on average, _slower_? This would correspond to a positive value of the `diff` variable. \nLet's get some summary statistics and a visualisation of out observed distribution.  \n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\n# mean(stroopdata$diff) and sd(stroopdata$diff) work just as well\nstroopdata |> \n  summarise(\n    meandiff = mean(diff),\n    sddiff = sd(diff)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 2\n  meandiff sddiff\n     <dbl>  <dbl>\n1     2.40   5.02\n```\n\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot(stroopdata, aes(x = diff)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](03a_inference_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n\nWhat we're really interested in talking about is the average 'mismatching - matching' score for __everybody__, not just our sample of 131. But we only have those 131 people, so we'll have to make do and use their data to provide us with an __estimate__.  \n\nOur __estimate__ is that people are 2.4 seconds slower, on average, when reading mismatched colour words than reading matched colour words.  \n\nRemember that there are many many different samples of $n=131$ that we _might have_ taken. And if we had taken a different sample, then our mean 'mismatching - matching' score (the `mean(stroopdata$diff)` value) would be different.  \n\nPreviously we learned about how the distribution of all possible sample means we _might_ take is known as a __sampling distribution__. We also learned that these tend to be normally distributed (regardless of the underlying population distribution) and so we can use the standard deviation of the sampling distribution (known as the __standard error__) to quantify the variation due to sampling.  \n\nTo actually get at the standard error, one of our options is to simulate the act of 'taking many samples of size $n$' by taking lots of samples _with replacement_ from our original sample (this is known as \"bootstrapping\").  \n\nAs our analyses become more advanced, then this will become more complex. In this example, because we are just interested in estimating a single mean value, we can use `replicate` to do calculate the means from 1000 resamples from our original sample. We can then simply calculate the standard deviation of all these means:   \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nstroop_bootstrapdist <- \n  replicate(1000, mean(sample(stroopdata$diff, size = 131, replace = TRUE)))\n\nsd(stroop_bootstrapdist)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4318596\n```\n\n\n:::\n:::\n\n\n\n\nAlternatively (and more conventionally), we use a formula of $\\frac{\\sigma}{\\sqrt{n}}$, which we can calculate much more easily.  \nThe symbol \"$\\sigma$\" is the standard deviation of the population, but we are going to approximate this with \"$s$\", the standard deviation of our sample. The \"$n$\" is the size of our sample:   \n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nstroopdata |> \n  summarise(\n    s = sd(diff), # standard deviation of sample\n    n = n(), # number of sample\n    SE = s/sqrt(n) # standard error of mean\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 3\n      s     n    SE\n  <dbl> <int> <dbl>\n1  5.02   131 0.438\n```\n\n\n:::\n:::\n\n\n\n\nWhat the standard error gives us is an idea of how much uncertainty there is going to be in our estimated mean from our sample of this size:  \n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Sampling distribution for mean of sample size 131, with SE = 5.01 / sqrt(131) = 0.44](03a_inference_files/figure-html/fig-sampdist-1.png){#fig-sampdist fig-align='center' width=80%}\n:::\n:::\n\n\n\n\nThis enables us to, for instance, construct a range of plausible values for our estimated 'mismatching - matching' score. \nThe range is centered around our __point estimate__ (the mean score in our sample), and we widen it to include X% of the possible means we might also see from a sample of the same size. This is achieved by multiplying the standard error by a value that corresponds to our confidence level.  \n\n$$\n\\begin{align}\n\\text{95\\% CI} & \\qquad = \\bar{x} \\pm 1.96 \\times SE & \\\\\n& \\qquad = 2.40 \\pm 1.96 \\times 0.438 \\\\\n& \\qquad = 2.40 \\pm 0.858 \\\\\n& \\qquad = [1.542, 3.258] \\\\\n\\end{align}\n$$\nThe 1.96 used here comes from our rules-of-thumb about the normal distribution (see [2B #normal-distributions](02b_sampling.html#normal-distributions){target=\"_blank\"}): 95% of the data fall within 1.96 standard deviations of the mean:^[\nFor other intervals, such as a 90% interval, we need to know the point at which 5% is either side of a normal distribution (i.e., giving us the middle 90%). `qnorm(c(0.05,0.95))` will give us 1.64, which we then put into our construction of the interval: $90\\%\\, CI = \\bar{x} \\pm 1.64 \\times SE$.\n]\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nqnorm(c(0.025, 0.975))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -1.959964  1.959964\n```\n\n\n:::\n:::\n\n\n\n\n<div class=\"divider div-transparent div-dot\"></div>\n\n# Null Hypothesis Significance Testing (NHST)\n\nLet's suppose we are interested in asking a question.  \n\n> __is there__ an effect of the mismatching/matching colour-words?  \n\nOur objective here has changed slightly: rather than being concerned with parameter estimation (\"what is the estimated score\"), our question is now about making a statement about two competing hypotheses: \n\n- $H_0 \\,\\, (\\text{The Null Hypothesis}):$ There is _no_ difference between matching and mismatching conditions. \n- $H_1 \\,\\, (\\text{The Alternative Hypothesis}):$ There is _some_ difference between matching and mismatching conditions. \n\nIf we use $\\mu$ to denote the average 'mismatching - matching' score _in the population_, then we can state these as: \n\n- $H_0: \\mu = 0$.  \n- $H_1: \\mu \\neq 0$.\n\n\nWith the confidence interval that we have created above, we can already make a statement about these. Our 95% CI does not contain zero, meaning that we can, with that same level of confidence, reject $H_0$.  \n\nHowever, there are instances where it is not feasible for us to create a confidence interval.^[Think about an example where our question is about whether there is a difference in variable $Y$ between groups A, B, C and D. Around what should we construct our interval? Around the difference $\\bar{Y}_A - \\bar{Y}_B$ (difference between A and B's average scores on $Y$), or $\\bar{Y}_A - \\bar{Y}_C$, or $\\bar{Y}_B - \\bar{Y}_D$?] \nThis is where the other primary tool for null hypothesis significance testing comes in, the p-value.  \n\n## Test-statistics & p-values\n\nThe p-value is a formal way of testing a statistic against a null hypothesis. To introduce the p-value, instead of thinking first about what we _have_ observed in our sample, we need to think about what we would expect to observe _if our null hypothesis is true._  \n\nWith our Stroop Task example, our null hypothesis is that there is no difference between matching and mismatching conditions ($H_0: \\mu = 0$). Under $H_0$, the average 'mismatching-matching' score in the population is zero, and we would expect most of the samples we _might_ take to have a mean score of close to this (not _exactly_ 0, but centered around 0). We saw above that we could express the sampling distribution of means taken from samples of size $n=131$ using the __standard error__. Under $H_0$ we would expect the samples of $n=131$ we _might_ take to have means that follow something like the distribution in @fig-hyp. We can think of this as the sampling distribution of $\\bar{x}$, but centered on our null hypothesis (in this case, $\\mu = 0$). We call this the 'null distribution'.  \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Sampling distribution for mean of sample size 131, assuming population mean = 0. Observed sample mean shown in red](03a_inference_files/figure-html/fig-hyp-1.png){#fig-hyp fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n\n\n:::statbox\n__Test-statistic__ \n\nThe first step now is to create a test-statistic. That is, a statistic that tell us, in some _standardised units_, how big our observed effect is from the null hypothesis (i.e. in this case, how far from $\\mu=0$ our sample mean is).  \n\nThe straightforward way to do this is to express how far away from $\\mu=0$ our sample mean is _in terms of standard errors._ We'll call our test statistic $Z$:  \n\n$$\nZ = \\frac{\\text{estimate}-\\text{null}}{SE}\n$$\n\nOur mean and standard error are:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmean(stroopdata$diff)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.402977\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(stroopdata$diff) / sqrt(nrow(stroopdata))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4382302\n```\n\n\n:::\n:::\n\n\n\n\nSo our test-statistic is \n$$\nZ = \\frac{2.40 - 0}{0.438} = 5.479\n$$\n:::\n\n:::statbox\n__p-value__ \n\nWe can now calculate how likely it is to see values _at least as extreme_ as our observed test-statistic, _if the null is true_.  \n\nIf the null hypothesis is true (there was no 'mismatching-matching' difference) then we would expect Z-statistics to be normally distributed with a mean of 0 and a standard deviation of 1.  \n\nWe have seen the process of how we might calculate a probability from a distribution like this already: the `pnorm()` function gives us the area of a distribution to the one side of a given value:  \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npnorm(??, mean = 0, sd = 1, lower.tail = FALSE)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![pnorm() provides us with a p-value for a z-statistic](03a_inference_files/figure-html/fig-pnormstroop-1.png){#fig-pnormstroop fig-align='center' width=80%}\n:::\n:::\n\n\n\nRemember, our Z-statistic we calculated above is 5.479. If the null hypothesis were true then the probability that we would see a sample ($n=131$) with a Z-statistic _at least_ that large is:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npnorm(5.479, lower.tail = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.138682e-08\n```\n\n\n:::\n:::\n\n\n\nwhich is R's way of printing 0.00000002138682.  \n\nThere is one last thing, and that the _direction_ of our hypotheses. Recall from earlier that we stated $H_0: \\mu = 0$ and $H_1: \\mu \\neq 0$. This means that we are interested in the probability of getting results this far away from 0 _in either direction._  \nWe are interested in both tails:  \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![2*pnorm gives the two tails](03a_inference_files/figure-html/fig-pnormstroop2-1.png){#fig-pnormstroop2 fig-align='center' width=80%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n2 * pnorm(5.479, lower.tail = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4.277364e-08\n```\n\n\n:::\n:::\n\n\n\n\nor $p =$ 0.00000004277364. \n\n:::sticky\n__p-value__  \n\nThe p-value is the probability^[What we have been seeing is that probabilities in NHST are defined as the relative frequency of an event *over many trials* (as \"many\" $\\to \\infty$). This requires assuming some features of the data generating process which guides what the \"many trials\" would look like (e.g., that there is no effect). The $p$-value is the probability of observing results as or more extreme than the data, *if the data were really generated by a hypothesised chance process*.] that we observe a test statistic at least as extreme as the one we observed, _assuming the null hypothesis $H_0$ to be true_.  \n\n\n:::\n\n:::\n\n## Making Decisions\n\nNow that we have our p-value of 0.00000004277364, we need to use it to make a decision about our hypotheses.  \n\nTypically, we pre-specify the probability level at which we will consider results to be so unlikely to have arisen from the null distribution that we will take them as evidence to reject the null hypothesis. \nThis pre-specified level is commonly referred to as $\\alpha$ (\"alpha\"). Setting $\\alpha = 0.05$ means that we will reject $H_0$ when we get a result which is extreme enough to only occur 0.05 (5%) of the time or less if the $H_0$ is true.  \n\nIn our case, 0.00000004277364 $< 0.05$, so we reject the null hypothesis that there is no difference in the mismatching/matching conditions of the Stroop Task.  \n\n\n:::sticky\nThere's a lot of convention to how we talk about NHST, but the typical process is as follows: \n\n1. _Clearly_ specify the null and alternative hypotheses.  \n2. Specify $\\alpha$\n3. Calculate statistic\n4. Compute p-value  \n    - If $p<\\alpha$, then reject the null hypothesis.\n    - If $p\\geq\\alpha$, then fail to reject* the null hypothesis. \n    \n*Note, we don't \"accept\" anything, we just \"reject\" or \"fail to reject\" the null hypothesis. Think of it like a criminal court, and we are trying the null hypothesis - $H_0$ is \"innocent until proven guilty\".  \n:::\n\n## Making Mistakes  \n\nWhether our eventual decision is a) reject the null hypothesis, or b) fail to reject the null hypothesis, there's always a chance that we might be making a mistake. There are actually two different types of mistakes we might make. An often used analogy (@fig-httrial) is the idea of criminal trials in which an innocent person can be wrongfully convicted, or a guilty person can be set free. \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Making errors in NHST is like a criminal court making errors in its decision on the defendent](images/hypothesis/ht-errors-trial.png){#fig-httrial fig-align='center' width=80%}\n:::\n:::\n\n\n\n\n\n\nWe can actually quantify the chance that we're making errors in our different decisions. Thinking back to the definition of a p-value, it is the probability of seeing our results _if_ the null hypothesis is true. If we make a decision to reject the null hypothesis based on whether $p<\\alpha$, then the probability that this decision is a mistake is $\\alpha$. \n\nThe probability that we the other sort of error (failing to reject the null hypothesis when the null hypothesis is actually false), we denote with $\\beta$. \n\nDoing statistics is partly a matter of balancing these possibilities. If we used a very low $\\alpha$-level (e.g. we reject when $p<.0001$ rather than $p<.05$) then we _increase_ the probability of making a type II error. \n\n:::sticky\n__Types of Errors in NHST__  \n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Probabilities of making different errors in NHST](images/hypothesis/ht-errors-table-2.png){#fig-httrial2 fig-align='center' width=80%}\n:::\n:::\n\n\n\n:::\n\n:::statbox\n__Power ($1-\\beta$)__  \n\nA key notion in conducting studies is \"statistical power\". Studies want to increase the probability of correctly rejecting the null hypothesis (i.e. correctly identifying that there _is_ something more than chance going on).  \n\nThis is the bottom right cell of the tables in @fig-httrial and @fig-httrial2. We know that this will depend on the $\\alpha$-level that we choose, but there are other important factors that influence $1-\\beta$: \n\n- power increases as sample size increases\n  - *e.g. it's easier to determine that cats weigh less than dogs if we measure 100 animals vs if we measure only 10 animals*\n- power increases the farther away the true value is from the null hypothesis value \n  - *e.g. it's easier to determine that cats weigh less than elephants than it is to determine that cats weigh less than dogs*  \n\n:::\n\n<div class=\"divider div-transparent div-dot\"></div>\n",
    "supporting": [
      "03a_inference_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/panelset-0.3.0/panelset.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/panelset-0.3.0/panelset.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}